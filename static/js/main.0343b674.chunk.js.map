{"version":3,"sources":["helpers/happiness.svg","helpers/fear.svg","helpers/anger.svg","helpers/neutral.svg","helpers/sad.svg","helpers/disgusted.svg","helpers/admiration.svg","helpers/expectancy.svg","helpers/surprise-face.svg","helpers/settings.js","components/Layout/logo.png","components/Layout/Layout.js","components/Tweet/Tweet.js","components/Form/Form.js","components/DropZone/LoadingAnimation.js","components/DropZone/DropZone.js","helpers/config.js","components/Result/Result.js","components/ResultDialog/ResultDialog.js","components/Table/Table.js","helpers/twitterReducer.js","components/App/App.js","services/apiService.js","reportWebVitals.js","index.js"],"names":["icons","neutralny","neutIcon","oczekiwanie","expIcon","podziw","admIcon","radosc","hapIcon","smutek","sadIcon","strach","fearIcon","wstret","disIcon","zaskoczenie","surpIcon","zlosc","angIcon","annotationKey","skippedKey","userKey","Copyright","setShowId","Typography","variant","color","align","Link","href","onClick","style","fontSize","title","useStyles","makeStyles","theme","appBar","position","layout","width","marginLeft","spacing","marginRight","breakpoints","up","logo","paper","marginTop","marginBottom","Layout","children","classes","useState","useCookies","cookies","setCookie","useLocalStorage","storage","setStorage","skipped","setSkipped","annotations","skippedTweets","useEffect","Array","isArray","length","Fragment","CssBaseline","AppBar","className","Toolbar","src","noWrap","Paper","card","backgroundColor","margin","padding","minHeight","tweet","display","flexDirection","justifyContent","alignItems","error","fontWeight","errorMessage","textAlign","info","progress","left","top","Tweet","tweetContent","tweetId","loading","setLoading","SnackbarContent","message","Icon","Card","CardContent","onLoad","options","maxWidth","cards","CircularProgress","buttons","buttonContainer","button","labelIcon","height","animationContainer","innerContainer","animations","LoadingAnimation","Math","floor","random","selectedAnimation","setSelectedAnimation","interval","setInterval","nextAnimationIndex","indexOf","clearInterval","component","transform","zone","flex","borderWidth","borderRadius","borderColor","borderStyle","outline","transition","activeStyle","acceptStyle","rejectStyle","DropZone","onFileChange","isLoading","onDrop","useCallback","acceptedFiles","reader","FileReader","onabort","console","log","onerror","onload","result","JSON","parse","id","filter","item","pos","findIndex","el","forEach","file","readAsText","useDropzone","accept","getRootProps","getInputProps","isDragActive","isDragAccept","isDragReject","emotions","emotionColors","icon","container","iconContainer","moreButton","cursor","Result","data","onClickMore","sortedArray","Object","entries","sort","a","b","values","slice","map","Number","toFixed","emotionIcon","chartType","loader","role","sourceColumn","type","calc","titleTextStyle","bar","groupWidth","legend","rootProps","aria-label","sortedColumns","modelNames","charts","dialogContent","sentiment","paddingTop","ResultDialog","onClose","open","topEmotion","valuesModel1","emotion","model1","valuesModel2","model2","valuesModel3","model3","handleClose","scoreSum","reduce","acc","Dialog","aria-labelledby","fullWidth","DialogTitle","DialogContent","content","includes","idx","hAxis","DialogActions","Button","paddingLeft","table","maxHeight","body","overflowY","tweetClass","cellResult","borderRight","TweetTable","tweets","page","setPage","rowsPerPage","setRowsPerPage","selectedTweet","setSelectedTweet","handleClickMore","newSelectedTweet","find","TableContainer","Table","size","TableHead","TableRow","TableCell","TableBody","row","split","status","TablePagination","rowsPerPageOptions","count","onChangePage","event","newPage","onChangeRowsPerPage","target","value","gutterBottom","initialState","isRequestPending","SET_TWEETS","UPDATE_TWEETS","REMOVE_TWEETS","actions","reducer","state","action","tweetsWithEmotions","matchingTweet","updateTweetWithEmotions","Error","createMuiTheme","palette","primary","main","secondary","App","useReducer","dispatch","fetch","process","method","headers","stringify","then","json","response","CookiesProvider","ThemeProvider","newTweets","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mYAAe,MAA0B,sCCA1B,MAA0B,iCCA1B,MAA0B,kCCA1B,MAA0B,oCCA1B,MAA0B,gCCA1B,MAA0B,sCCA1B,MAA0B,uCCA1B,MAA0B,uCCA1B,MAA0B,0CCU5BA,EAAQ,CACnBC,UAAWC,EACXC,YAAaC,EACbC,OAAQC,EACRC,OAAQC,EACRC,OAAQC,EACRC,OAAQC,EACRC,OAAQC,EACRC,YAAaC,EACbC,MAAOC,GAkDIC,EAAgB,YAChBC,EAAa,UACbC,EAAU,U,QCvER,MAA0B,iCCazC,SAASC,EAAT,GAAiC,IAAbC,EAAY,EAAZA,UAClB,OACE,eAACC,EAAA,EAAD,CAAYC,QAAQ,QAAQC,MAAM,gBAAgBC,MAAM,SAAxD,UACG,wCACD,cAACC,EAAA,EAAD,CAAMF,MAAM,UAAUG,KAAK,yBAA3B,SACE,uCACM,IACR,sBAAMC,QAAS,kBAAMP,GAAU,IAA/B,gBACC,IAAI,uBAAK,uBAAMQ,MAAO,CAACC,SAAU,IAAxB,UACT,iBACD,cAACJ,EAAA,EAAD,CAAMC,KAAK,2CAA2CH,MAAM,UAAUO,MAAM,UAA5E,qBACC,SACD,cAACL,EAAA,EAAD,CAAMC,KAAK,4BAA4BH,MAAM,UAAUO,MAAM,WAA7D,oCAKN,IAAMC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,OAAQ,CACNC,SAAU,YAEZC,OAAO,aACLC,MAAO,OACPC,WAAYL,EAAMM,QAAQ,GAC1BC,YAAaP,EAAMM,QAAQ,IAC1BN,EAAMQ,YAAYC,GAAG,IAAyB,EAAnBT,EAAMM,QAAQ,IAAU,CAClDF,MAAO,MACPC,WAAY,OACZE,YAAa,SAGjBG,KAAM,CACJN,MAAO,GACPG,YAAaP,EAAMM,QAAQ,IAG7BK,MAAM,aACJC,UAAWZ,EAAMM,QAAQ,GACzBO,aAAcb,EAAMM,QAAQ,IAE3BN,EAAMQ,YAAYC,GAAG,IAAyB,EAAnBT,EAAMM,QAAQ,IAAU,CAElDO,aAAcb,EAAMM,QAAQ,SAMnB,SAASQ,EAAT,GAA+B,IAAbC,EAAY,EAAZA,SACzBC,EAAUlB,IAD2B,EAEfmB,oBAAS,GAFM,mBAE5B9B,GAF4B,aAGd+B,YAAW,CAACnC,EAAeE,EAASD,IAHtB,mBAGpCmC,EAHoC,KAG3BC,EAH2B,OAIbC,YAAgBtC,EAAe,IAJlB,mBAIpCuC,EAJoC,KAI3BC,EAJ2B,OAKbF,YAAgBrC,EAAY,IALf,mBAKpCwC,EALoC,KAK3BC,EAL2B,KAOrCC,EAAcP,EAAO,WAAmB,GACxCQ,EAAgBR,EAAO,SAAgB,GAa7C,OAXAS,qBAAU,YACM,MAAXN,GAAoBO,MAAMC,QAAQR,IAA+B,IAAnBA,EAAQS,QAA6B,KAAZT,KACxEC,EAAWG,GACXN,EAAUrC,EAAe,MAEb,MAAXyC,GAAoBK,MAAMC,QAAQN,IAA+B,IAAnBA,EAAQO,QAA6B,KAAZP,KACxEC,EAAWE,GACXP,EAAUpC,EAAY,OAEvB,IAGD,eAAC,IAAMgD,SAAP,WACE,cAACC,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,CAAQhC,SAAS,WAAWiC,UAAWnB,EAAQf,OAA/C,SACE,eAACmC,EAAA,EAAD,WACE,qBAAKD,UAAWnB,EAAQN,KAAM2B,IAAK3B,IACnC,cAACtB,EAAA,EAAD,CAAYC,QAAQ,KAAKC,MAAM,UAAUgD,QAAM,EAA/C,iDAGA,sBAAM3C,MAAO,CAAC,KAAQ,UAG1B,uBAAMwC,UAAWnB,EAAQb,OAAzB,UACE,cAACoC,EAAA,EAAD,CAAOJ,UAAWnB,EAAQL,MAA1B,SACE,cAAC,IAAMqB,SAAP,UAAiBjB,MAEnB,cAAC7B,EAAD,CAAWC,UAAWA,U,0HCvFxBW,G,OAAYC,aAAW,SAACC,GAAD,MAAY,CACvCwC,KAAM,CACJC,gBAAiB,0BACjBrC,MAAO,QACPsC,OAAQ,EACRC,QAAS,EACTC,UAAW,QACX1C,SAAU,YAEZ2C,MAAO,CACLzC,MAAO,OACP0C,QAAS,OACTC,cAAe,SACfC,eAAgB,SAChBC,WAAY,UAEdC,MAAO,CACLT,gBAAiB,UACjBnD,MAAO,OACP6D,WAAY,KAEdC,aAAc,CACZC,UAAW,SACXP,QAAS,OACTC,cAAe,MACfC,eAAgB,SAChBC,WAAY,UAEdK,KAAM,CACJb,gBAAiB,YACjBnD,MAAO,OACP6D,WAAY,KAEdI,SAAU,CACRrD,SAAU,WACVsD,KAAM,MACNC,IAAK,aAIM,SAASC,EAAT,GAA+C,EAA9BC,aAA+B,IAAZC,EAAW,EAAXA,QAC3C5C,EAAUlB,IAD4C,EAE9BmB,oBAAS,GAFqB,mBAErD4C,EAFqD,KAE5CC,EAF4C,OAGlC7C,oBAAS,GAHyB,mBAGrDiC,EAHqD,UAc5D,OAAc,IAAVA,EAEA,cAACa,EAAA,EAAD,CACE5B,UAAWnB,EAAQkC,MACnBc,QACE,cAAC,IAAMhC,SAAP,UACE,uBAAMG,UAAWnB,EAAQoC,aAAzB,UACE,cAACa,EAAA,EAAD,CAAMtE,MAAO,CAAEY,YAAa,QAA5B,2BADF,yIAYRqD,GACE,cAAC,IAAM5B,SAAP,UACE,eAACkC,EAAA,EAAD,CAAM/B,UAAWnB,EAAQwB,KAAzB,UACE,cAAC2B,EAAA,EAAD,CAAahC,UAAW,gBAAxB,SAEI,cAAC,IAAD,CACEiC,OAjCC,WACbN,GAAW,IAiCCF,QAASA,EACTS,QAAS,CAAEC,SAAU,IAAKC,MAAO,cAItCV,GACC,cAACW,EAAA,EAAD,CAAkBlF,MAAM,YAAY6C,UAAWnB,EAAQuC,gBCjFjDxD,aAAW,SAACC,GAAD,MAAY,CACvCyE,QAAS,CACP3B,QAAS,OACTE,eAAgB,YAElB0B,gBAAiB,CACfhC,OAAQ,QAEViC,OAAQ,CACN/D,UAAWZ,EAAMM,QAAQ,GACzBD,WAAYL,EAAMM,QAAQ,GAC1BV,SAAU,QAEZgF,UAAW,CACTC,OAAQ7E,EAAMM,QAAQ,GACtBC,YAAaP,EAAMM,QAAQ,Q,aCzBzBR,G,OAAYC,aAAW,SAACC,GAAD,MAAY,CACvC8E,mBAAoB,CAClB5E,SAAU,WACVuD,IAAK,GAEPsB,eAAgB,CACd7E,SAAU,iBAIR8E,GAAa,CAAC,OAAQ,MAAO,OAAQ,MAAO,OAAQ,SAE3C,SAASC,KACtB,IAAMjE,EAAUlB,IADyB,EAESmB,mBAAS+D,GAAWE,KAAKC,MAAMD,KAAKE,SAAWJ,GAAWjD,UAFnE,mBAElCsD,EAFkC,KAEfC,EAFe,KAczC,OAVA1D,qBAAU,WACR,IAAM2D,EAAWC,aAAY,WAC3BF,GAAqB,SAAAD,GACnB,IAAMI,EAAqBT,GAAWU,QAAQL,GAAqBL,GAAWjD,OAAS,EAAIiD,GAAWU,QAAQL,GAAqB,EAAI,EACvI,OAAOL,GAAWS,QAEnB,KACH,OAAO,kBAAME,cAAcJ,MAC1B,IAGD,sBAAKpD,UAAWnB,EAAQ8D,mBAAxB,UACGO,IAAsBL,GAAW,IAChC,sBAAK7C,UAAW,iBAAmBnB,EAAQ+D,eAA3C,UACE,eAAC3F,EAAA,EAAD,CAAY+C,UAAU,WAAW9C,QAAS,KAAMC,MAAO,UAAvD,gEAEE,sBAAM6C,UAAU,OAAhB,oBAEF,sBAAKA,UAAU,OAAf,UACE,sBAAMA,UAAU,UAChB,sBAAKA,UAAU,MAAf,UACE,qBAAKA,UAAU,SACf,sBAAKA,UAAU,OAAf,UACE,qBAAKA,UAAU,QACf,qBAAKA,UAAU,WAEjB,sBAAKA,UAAU,OAAf,UACE,qBAAKA,UAAU,SACf,sBAAKA,UAAU,oBAAf,UACE,qBAAKA,UAAU,YACf,qBAAKA,UAAU,eAEjB,sBAAKA,UAAU,oBAAf,UACE,qBAAKA,UAAU,YACf,qBAAKA,UAAU,kBAGnB,qBAAKA,UAAU,iBAAf,SACE,qBAAKA,UAAU,OAAf,SACE,qBAAKA,UAAU,OAAf,SACE,qBAAKA,UAAU,OAAf,SACE,qBAAKA,UAAU,OAAf,SACE,qBAAKA,UAAU,OAAf,SACE,qBAAKA,UAAU,OAAf,SACE,qBAAKA,UAAU,gCAYpCkD,IAAsBL,GAAW,IAChC,sBAAK7C,UAAW,iBAAmBnB,EAAQ+D,eAA3C,UACE,sBAAK5C,UAAU,MAAf,UACE,qBAAKA,UAAU,WACf,qBAAKA,UAAU,mBACf,qBAAKA,UAAU,mBACf,qBAAKA,UAAU,mBACf,qBAAKA,UAAU,mBACf,qBAAKA,UAAU,uBACf,qBAAKA,UAAU,oBACf,qBAAKA,UAAU,sBACf,qBAAKA,UAAU,uBACf,qBAAKA,UAAU,qBACf,qBAAKA,UAAU,qBACf,qBAAKA,UAAU,+BAGjB,sBAAKA,UAAU,OAAf,UACE,cAAC/C,EAAA,EAAD,CAAYwG,UAAW,OAAQvG,QAAS,KAAMC,MAAO,UAArD,mEAGA,sBAAM6C,UAAU,OAAhB,uBAILkD,IAAsBL,GAAW,IAChC,sBAAK7C,UAAW,kBAAoBnB,EAAQ+D,eAA5C,UACE,qBAAK5C,UAAU,YAAf,SACE,cAAC/C,EAAA,EAAD,CAAYwG,UAAW,OAAQvG,QAAS,KAAMC,MAAO,UAArD,wDAIF,sBAAK6C,UAAU,OAAf,UACE,sBAAKA,UAAU,aAAf,UACE,qBAAKA,UAAU,yBACf,qBAAKA,UAAU,6BAEjB,sBAAKA,UAAU,aAAf,UACE,sBAAKA,UAAU,aAAf,UACE,qBAAKA,UAAU,yBACf,qBAAKA,UAAU,6BAEjB,qBAAKA,UAAU,aAAf,SACE,qBAAKA,UAAU,8BAIrB,sBAAKA,UAAU,aAAf,UACE,cAAC/C,EAAA,EAAD,CAAYwG,UAAW,OAAQvG,QAAS,KAAMC,MAAO,UAArD,wDAGA,sBAAM6C,UAAU,OAAhB,uBAKJkD,IAAsBL,GAAW,IAC/B,sBAAK7C,UAAW,iBAAmBnB,EAAQ+D,eAA3C,UACE,sBAAK5C,UAAU,YAAf,UACE,cAAC/C,EAAA,EAAD,CAAYwG,UAAW,OAAQvG,QAAS,KAAMC,MAAO,UAArD,uDAEa,sBAAM6C,UAAU,OAAhB,oBAEf,qBAAKA,UAAU,QACf,qBAAKA,UAAU,aAAf,SACE,cAAC/C,EAAA,EAAD,CAAYwG,UAAW,OAAQvG,QAAS,KAAMC,MAAO,UAArD,wDAQN+F,IAAsBL,GAAW,IAC/B,sBAAK7C,UAAW,4BAA8BnB,EAAQ+D,eAAtD,UACE,sBAAK5C,UAAU,YAAf,UACE,cAAC/C,EAAA,EAAD,CAAYwG,UAAW,OAAQvG,QAAS,KAAMC,MAAO,UAArD,+EAEa,uBAAK,sBAAM6C,UAAU,OAAOxC,MAAO,CAACkG,UAAW,cAA1C,oBAEpB,qBAAK1D,UAAU,sBAKnBkD,IAAsBL,GAAW,IAC/B,sBAAK7C,UAAW,6BAA+BnB,EAAQ+D,eAAvD,UACE,sBAAK5C,UAAU,YAAf,UACE,cAAC/C,EAAA,EAAD,CAAYwG,UAAW,OAAQvG,QAAS,KAAMC,MAAO,UAArD,mDAEa,uBAAK,sBAAM6C,UAAU,OAAOxC,MAAO,CAACkG,UAAW,cAA1C,oBAEpB,sBAAK1D,UAAU,QAAf,UACE,qBAAKA,UAAU,MAAf,SACE,qBAAKA,UAAU,OAAf,SACE,qBAAKA,UAAU,WAGnB,sBAAKA,UAAU,OAAf,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,SACf,qBAAKA,UAAU,YAEjB,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,SACf,qBAAKA,UAAU,YAEjB,qBAAKA,UAAU,WACf,qBAAKA,UAAU,WACf,qBAAKA,UAAU,aAEjB,qBAAKA,UAAU,WACf,qBAAKA,UAAU,WACf,sBAAKA,UAAU,UAAf,UACE,qBAAKA,UAAU,WACf,qBAAKA,UAAU,OACf,qBAAKA,UAAU,OACf,qBAAKA,UAAU,OACf,qBAAKA,UAAU,OACf,qBAAKA,UAAU,QACf,qBAAKA,UAAU,QACf,qBAAKA,UAAU,SACf,sBAAKA,UAAU,IAAf,UACE,qBAAKA,UAAU,OACf,qBAAKA,UAAU,OACf,qBAAKA,UAAU,OACf,qBAAKA,UAAU,sBCtMjC,IAAMrC,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvC8F,KAAM,CACJC,KAAM,EACNjD,QAAS,OACTC,cAAe,SACfE,WAAY,SACZN,QAAS,OACT/C,SAAU,SACVoG,YAAa,EACbC,aAAc,EACdC,YAAa,UACbC,YAAa,SACb1D,gBAAiB,UACjBnD,MAAO,UACP8G,QAAS,OACTC,WAAY,0BACZnG,SAAU,WACV0C,UAAW,SAEb0D,YAAa,CACXJ,YAAa,WAEfK,YAAa,CACXL,YAAa,WAEfM,YAAa,CACXN,YAAa,UACb5G,MAAO,eAII,SAASmH,GAAT,GAGX,IAAD,IAFDC,oBAEC,MAFc,aAEd,MADDC,iBACC,SACK3F,EAAUlB,KACV8G,EAASC,uBAAY,SAACC,GAE1B,IAAMC,EAAS,IAAIC,WAEnBD,EAAOE,QAAU,kBAAMC,QAAQC,IAAI,6BACnCJ,EAAOK,QAAU,kBAAMF,QAAQC,IAAI,wBACnCJ,EAAOM,OAAS,WAEd,IAAMC,EAASC,KAAKC,MAAMT,EAAOO,QAC7BzF,MAAMC,QAAQwF,IAA2B,MAAhBA,EAAO,GAAGG,IACrCf,EACEY,EAAOI,QAAO,SAACC,EAAMC,GACnB,OAAON,EAAOO,WAAU,SAACC,GAAD,OAAQA,EAAGL,KAAOE,EAAKF,QAAQG,OAO/Dd,EAAciB,SAAQ,SAACC,GAAD,OAAUjB,EAAOkB,WAAWD,QACjD,IAtBF,EA6BGE,YAAY,CAAEC,OAAQ,mBAAoBvB,WAL5CwB,EAxBD,EAwBCA,aACAC,EAzBD,EAyBCA,cACAC,EA1BD,EA0BCA,aACAC,EA3BD,EA2BCA,aACAC,EA5BD,EA4BCA,aAGI7I,EAAK,UAAMqB,EAAQ8E,KAAd,YAAsBwC,EAAetH,EAAQsF,YAAc,GAA3D,YACTiC,EAAevH,EAAQuF,YAAc,GAD5B,YAEPiC,EAAexH,EAAQwF,YAAc,IAEzC,OACE,8CAAKrE,UAAWxC,GAAWyI,KAA3B,cACE,qCAAWC,MACT1B,EAcA,GAbA2B,EACEC,EACE,wDAEA,kFACoD,IAClD,2CAFF,YAMF,wFAKH5B,GAAa,cAAC1B,GAAD,Q,mFCjFPwD,GAAW,CACtB5K,UAAW,YACXE,YAAa,cACbE,OAAQ,SACRE,OAAQ,mBACRE,OAAQ,SACRE,OAAQ,SACRE,OAAQ,cACRE,YAAa,cACbE,MAAO,wBAGI6J,GAAgB,CAC3B7K,UAAW,UACXE,YAAa,UACbE,OAAQ,UACRE,OAAQ,UACRE,OAAQ,UACRE,OAAQ,UACRE,OAAQ,UACRE,YAAa,UACbE,MAAO,WCzBHiB,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvC2I,KAAM,CACJrE,SAAU,QAEZsE,UAAW,CACT9F,QAAS,OACTC,cAAe,MACfC,eAAgB,UAElB6F,cAAe,CACb/F,QAAS,OACTC,cAAe,SACfC,eAAgB,SAChBC,WAAY,UAEd6F,WAAY,CACVC,OAAQ,eAIG,SAASC,GAAT,GAAuD,IAArCC,EAAoC,EAApCA,KAAMxB,EAA8B,EAA9BA,GAA8B,IAA1ByB,mBAA0B,MAAZ,aAAY,EAC7DlI,EAAUlB,KAChB,GAAY,MAARmJ,EACF,MAAO,gDAGT,IAAME,EAAcC,OAAOC,QAAQJ,GAAMK,MAAK,SAAUC,EAAGC,GACzD,OAAOA,EAAE,GAAKD,EAAE,MAOZE,EAASN,EACZO,MAAM,EAAG,GACTC,KAAI,SAAC7B,GAAD,MAAQ,CACXW,GAASX,EAAG,IACZ8B,OAAOA,OAAe,IAAR9B,EAAG,IAAU+B,QAAQ,IACnCnB,GAAcZ,EAAG,IACjB,SAGEgC,EAAclM,EAAMuL,EAAY,GAAG,IAEzC,OACE,sBAAKhH,UAAWnB,EAAQ4H,UAAxB,UACE,cAAC,KAAD,CACExI,MAAO,QACPyE,OAAQ,QACRkF,UAAU,WACVC,OAAQ,gDACRf,KAAI,CACF,CACE,UACA,gBACA,CAAEgB,KAAM,SACR,CACEC,aAAc,EACdD,KAAM,aACNE,KAAM,SACNC,KAAM,eATR,mBAYCX,IAELpF,QAAS,CACPgG,eAAgB,CAAEzK,SAAU,IAC5BC,MAAO,iBAEPyK,IAAK,CAAEC,WAAY,OACnBC,OAAQ,CAAEtK,SAAU,SAGtBuK,UAAW,CAAE,cAAe,OAE9B,sBAAKtI,UAAWnB,EAAQ6H,cAAxB,UACE,qBACE1G,UAAWnB,EAAQ2H,KACnBtG,IAAKyH,EACLY,aAAYjB,EAAO,GAAG,KAExB,cAACrK,EAAA,EAAD,CAAY+C,UAAWnB,EAAQ8H,WAAYpJ,QApD7B,WAClBwJ,EAAYzB,IAmDyDpI,QAAQ,KAAKC,MAAM,YAAYC,MAAM,SAAtG,SAAgH,e,4CC7ElHoL,GAAgB,CACpB,QACA,SACA,SACA,SACA,YACA,cACA,cACA,SACA,UAGIC,GAAa,CAAC,WAAY,sBAAa,WAEvC9K,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvC6K,OAAQ,CACN/H,QAAS,OACTC,cAAe,MACfC,eAAgB,SAChBpC,UAAWZ,EAAMM,QAAQ,IAE3BwK,cAAe,CACbhI,QAAS,OACTC,cAAe,UAEjBlD,MAAO,CACLwD,UAAW,UAEb0H,UAAW,CACTC,WAAYhL,EAAMM,QAAQ,GAC1B+C,UAAW,cAcA,SAAS4H,GAAT,GAAiD,IAAzBC,EAAwB,EAAxBA,QAASC,EAAe,EAAfA,KAAMtI,EAAS,EAATA,MAC9C7B,EAAUlB,KAChB,GAAa,MAAT+C,EACF,OAAO,KAGT,IAhBoBuI,EAgBdC,EAAeV,GAAchB,KAAI,SAAC2B,GAAD,MAAa,CAClD7C,GAAS6C,GACT1B,OAAOA,OAA+B,IAAxB/G,EAAM0I,OAAOD,IAAgBzB,QAAQ,IACnDnB,GAAc4C,GACd,SAEIE,EAAeb,GAAchB,KAAI,SAAC2B,GAAD,MAAa,CAClD7C,GAAS6C,GACT1B,OAAOA,OAA+B,IAAxB/G,EAAM4I,OAAOH,IAAgBzB,QAAQ,IACnDnB,GAAc4C,GACd,SAEII,EAAef,GAAchB,KAAI,SAAC2B,GAAD,MAAa,CAClD7C,GAAS6C,GACT1B,OAAOA,OAA+B,IAAxB/G,EAAM8I,OAAOL,IAAgBzB,QAAQ,IACnDnB,GAAc4C,GACd,SAGIM,EAAc,WAClBV,KAOIW,EAAW,CAAChJ,EAAM0I,OAAQ1I,EAAM4I,OAAQ5I,EAAM8I,QAAQG,QAC1D,SAACC,EAAKpE,GACJ,IAAK,IAAM2D,KAAW3D,EACpBoE,EAAIT,GAAW3D,EAAK2D,IAAYS,EAAIT,IAAY,GAElD,OAAOS,IACN,IAGL,OACE,eAACC,GAAA,EAAD,CACEd,QAASU,EACTK,kBAAgB,gBAChBd,KAAMA,EACN7G,UAAU,EACV4H,WAAW,EALb,UAOE,cAACC,GAAA,EAAD,CAAa1E,GAAG,gBAAgBtF,UAAWnB,EAAQnB,MAAnD,2BAGA,eAACuM,GAAA,EAAD,CAAejK,UAAWnB,EAAQ8J,cAAlC,UACE,sBAAK3I,UAAWnB,EAAQsC,KAAxB,UACE,cAAClE,EAAA,EAAD,CAAYC,QAAS,YAArB,SAAmC,oBACnC,cAAC0E,EAAA,EAAD,CAAiBC,QAASnB,EAAMwJ,UAChC,eAACjN,EAAA,EAAD,CAAY+C,UAAWnB,EAAQ+J,UAAW1L,QAAS,KAAnD,UACG,mBACD,gCArEU+L,EAqEUhC,OAAOC,QAAQwC,GAAUvC,MAAK,SAAUC,EAAGC,GAC7D,OAAOA,EAAE,GAAKD,EAAE,MACf,GAAG,GAtEZoB,GAAcjB,MAAM,EAAG,GAAG4C,SAASlB,GAC9B,sBAAMzL,MAAO,CAACL,MAAO,OAArB,SAA8B,cAEnCqL,GAAcjB,MAAM,GAAG4C,SAASlB,GAC3B,sBAAMzL,MAAO,CAACL,MAAO,cAArB,SAAqC,cAEvC,qBAmED,qBAAK6C,UAAWnB,EAAQ6J,OAAxB,SACG,CAACQ,EAAcG,EAAcE,GAAc/B,KAAI,SAACF,EAAQ8C,GAAT,OAC9C,cAAC,KAAD,CACEnM,MAAO,QACPyE,OAAQ,QACRkF,UAAU,WACVC,OAAQ,gDACRf,KAAI,CACF,CACE,UACA,gBACA,CAAEgB,KAAM,SACR,CACEC,aAAc,EACdD,KAAM,aACNE,KAAM,SACNC,KAAM,eATR,mBAYCX,IAELpF,QAAS,CACPxE,MAAM,cAAD,OAAgB+K,GAAW2B,IAChClC,eAAgB,CAAEzK,SAAU,IAE5B0K,IAAK,CAAEC,WAAY,OACnBC,OAAQ,CAAEtK,SAAU,QACpBsM,MAAO,CACL3M,MAAO,gBACPwK,eAAgB,CAAEzK,SAAU,MAIhC6K,UAAW,CAAE,cAAe8B,aAKpC,cAACE,GAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAQhN,QAASkM,EAAatM,MAAM,UAApC,wBCjJR,IAAMQ,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCyE,QAAS,CACP3B,QAAS,OACTE,eAAgB,YAElB0B,gBAAiB,CACfhC,OAAQ,QAEViC,OAAQ,CACN/D,UAAWZ,EAAMM,QAAQ,GACzBD,WAAYL,EAAMM,QAAQ,GAC1BV,SAAU,QAEZgF,UAAW,CACTC,OAAQ7E,EAAMM,QAAQ,GACtBC,YAAaP,EAAMM,QAAQ,IAE7BT,MAAO,CACL8M,YAAa3M,EAAMM,QAAQ,GAC3B0K,WAAYhL,EAAMM,QAAQ,GAC1B+C,UAAW,UAEbuJ,MAAO,CACLC,UAAW,QAEbC,KAAM,CACJjI,OAAQ,OACRkI,UAAW,QAEbC,WAAY,CACVrK,QAAS,EACTvC,MAAO,KAET6M,WAAY,CACVC,YAAa,kBACb7J,UAAW,cAIA,SAAS8J,GAAT,GAAyD,IAAD,IAAlCC,cAAkC,MAAzB,GAAyB,MAArBzG,iBAAqB,SAC/D3F,EAAUlB,KADqD,EAE7CmB,mBAAS,GAFoC,mBAE9DoM,EAF8D,KAExDC,EAFwD,OAG/BrM,mBAAS,IAHsB,mBAG9DsM,EAH8D,KAGjDC,EAHiD,OAI3BvM,mBAAS,MAJkB,mBAI9DwM,EAJ8D,KAI/CC,EAJ+C,KAe/DC,EAAkB,SAAClG,GACvB,IAAMmG,EAAmBR,EAAOS,MAAK,SAAA/F,GAAE,OAAIA,EAAGL,KAAOA,KACrDiG,EAAiBE,IAOnB,OACE,eAAC,IAAM5L,SAAP,WACE,cAAC8L,GAAA,EAAD,CAAgB3L,UAAWnB,EAAQ4L,MAAnC,SACE,eAACmB,GAAA,EAAD,CAAOC,KAAK,QAAZ,UACE,cAACC,GAAA,EAAD,UACE,eAACC,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,oBACA,cAACA,GAAA,EAAD,CAAW5O,MAAM,SAAjB,8BACA,cAAC4O,GAAA,EAAD,CAAW5O,MAAM,SAAjB,yCACA,cAAC4O,GAAA,EAAD,CAAW5O,MAAM,SAAjB,kCAGJ,cAAC6O,GAAA,EAAD,UACGhB,EACE1D,MAAM2D,EAAOE,EAAaF,EAAOE,EAAcA,GAC/C5D,KAAI,SAAC0E,GAAD,OACH,eAACH,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,CACExL,QAAQ,OACRqL,KAAK,QACL7L,UAAWnB,EAAQgM,WAHrB,SAKE,cAAC,EAAD,CACErJ,aAAc0K,EAAIhC,QAClBzI,QAAS,GAAKyK,EAAI5G,GAAG6G,MAAM,KAAK,OAGpC,eAACH,GAAA,EAAD,CACE5O,MAAM,QACN4C,UAAWnB,EAAQiM,WACnBtN,MAAO,CACLL,MAAsB,YAAf+O,EAAIE,OAAuB,QAAU,OAJhD,UAOG5H,GAAa,gCAAM,yBAAyB,uBAAK,cAACnC,EAAA,EAAD,CAAkBlF,MAAM,kBACxEqH,GAAa,cAACqC,GAAD,CAAQC,KAAMoF,EAAI9C,OAAQ9D,GAAI4G,EAAI5G,GAAIyB,YAAayE,OAEpE,eAACQ,GAAA,EAAD,CACE5O,MAAM,QACN4C,UAAWnB,EAAQiM,WACnBtN,MAAO,CACLL,MAAsB,YAAf+O,EAAIE,OAAuB,QAAU,OAJhD,UAOG5H,GAAa,gCAAM,4BAA4B,uBAAK,cAACnC,EAAA,EAAD,CAAkBlF,MAAM,kBAC3EqH,GAAa,cAACqC,GAAD,CAAQC,KAAMoF,EAAI5C,OAAQhE,GAAI4G,EAAI5G,GAAIyB,YAAayE,OAEpE,eAACQ,GAAA,EAAD,CACE5O,MAAM,QACN4C,UAAWnB,EAAQiM,WACnBtN,MAAO,CACLL,MAAsB,YAAf+O,EAAIE,OAAuB,QAAU,OAJhD,UAOG5H,GAAa,gCAAM,4BAA4B,uBAAK,cAACnC,EAAA,EAAD,CAAkBlF,MAAM,kBAC3EqH,GAAa,cAACqC,GAAD,CAAQC,KAAMoF,EAAI1C,OAAQlE,GAAI4G,EAAI5G,GAAIyB,YAAayE,SAvCvDU,EAAI5G,cA8CV,IAAlB2F,EAAOrL,QACN,cAACyM,GAAA,EAAD,CACEC,mBAAoB,CAAC,GAAI,GAAI,KAC7B7I,UAAU,MACV8I,MAAOtB,EAAOrL,OACdwL,YAAaA,EACbF,KAAMA,EACNsB,aAvFiB,SAACC,EAAOC,GAC/BvB,EAAQuB,IAuFFC,oBApFwB,SAACF,GAC/BpB,GAAgBoB,EAAMG,OAAOC,OAC7B1B,EAAQ,MAqFa,IAAlBF,EAAOrL,QACN,cAAC3C,EAAA,EAAD,CACEwG,UAAU,KACVvG,QAAQ,KACRC,MAAM,gBACN2P,cAAY,EACZ9M,UAAWnB,EAAQnB,MALrB,4CAUF,cAACoL,GAAD,CAAcC,QAxFS,WACzBwC,EAAiB,OAuF4BvC,KAAuB,MAAjBsC,EAAuB5K,MAAO4K,OClKrF,IAAMyB,GAAe,CACnB9B,OAAQ,GACR+B,kBAAkB,GAGdC,GAAa,aACbC,GAAgB,gBAChBC,GAAgB,gBAEhBC,GACQH,GADRG,GAEWF,GAYjB,SAASG,GAAQC,EAAOC,GACtB,OAAQA,EAAOvF,MACb,KAAKiF,GACH,OAAO,2BAAKK,GAAZ,IAAmBN,kBAAkB,EAAM/B,OAAQsC,EAAOzG,OAC5D,KAAKoG,GACH,OAAO,2BAAKI,GAAZ,IAAmBN,kBAAkB,EAAO/B,OAAQqC,EAAMrC,OAAOzD,KAAI,SAAA9G,GAAK,OAbhF,SAAiCA,EAAO8M,GACtC,IAAMC,EAAgBD,EAAmB9B,MAAK,SAAA/F,GAAE,OAAIA,EAAGL,KAAO5E,EAAM4E,MACpE,OAAoB,MAAjBmI,EACM,2BAAKA,GAAkB/M,GAEzBA,EAQ2EgN,CAAwBhN,EAAO6M,EAAOzG,WACtH,KAAKqG,GACH,OAAO,2BAAKG,GAAZ,IAAmBrC,OAAQ,KAC7B,QACE,MAAM,IAAI0C,OCbhB,IAAM9P,GAAQ+P,YAAe,CAC3BC,QAAS,CACPC,QAAS,CACPC,KAAM,WAERC,UAAWA,OAmCAC,OA/Bf,WAAgB,IAAD,EACaC,qBAAWb,GAASN,IADjC,mBACNO,EADM,KACCa,EADD,KAmBb,OAZA1O,qBAAU,WAEN,ICnC2BwL,EDkC1BqC,EAAMN,mBClCoB/B,EDmCMqC,EAAMrC,OCjCpCmD,MAAM,GAAD,OAJgBC,yBAIhB,gBAAqC,CAC/CC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElB5D,KAAMvF,KAAKoJ,UAAU,CACnBvD,OAAQA,EAAOzD,KAAI,SAAA7B,GAAE,MAAK,CAAE,GAAMA,EAAGL,GAAI,KAAQK,EAAGuE,gBAGrDuE,MAAK,SAAA3H,GAAI,OAAIA,EAAK4H,WDyBTD,MAAK,SAAAE,GACXR,EAAS,CACPnG,KAAMoF,GACNtG,KAAM6H,EAAS7H,YAIpB,CAACwG,EAAMN,mBAGR,cAAC4B,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAehR,MAAOA,GAAtB,SACE,eAACc,EAAD,WACE,cAAC2F,GAAD,CAAUC,aApBK,WAAqB,IAApBuK,EAAmB,uDAAP,GAClCX,EAAS,CAAEnG,KAAMoF,GAAoBtG,KAAMgI,KAmBGtK,UAAW8I,EAAMN,mBACzD,cAAC,GAAD,CAAO/B,OAAQqC,EAAMrC,OAAQzG,UAAW8I,EAAMN,2BExCzC+B,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBR,MAAK,YAAkD,IAA/CS,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1BZ,O","file":"static/js/main.0343b674.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/happiness.4e02f678.svg\";","export default __webpack_public_path__ + \"static/media/fear.2470cbbc.svg\";","export default __webpack_public_path__ + \"static/media/anger.8528d165.svg\";","export default __webpack_public_path__ + \"static/media/neutral.5623396f.svg\";","export default __webpack_public_path__ + \"static/media/sad.2f887896.svg\";","export default __webpack_public_path__ + \"static/media/disgusted.0f4f8fc2.svg\";","export default __webpack_public_path__ + \"static/media/admiration.1c8ea55d.svg\";","export default __webpack_public_path__ + \"static/media/expectancy.7f622444.svg\";","export default __webpack_public_path__ + \"static/media/surprise-face.f36133bf.svg\";","import hapIcon from \"./happiness.svg\";\nimport fearIcon from \"./fear.svg\";\nimport angIcon from \"./anger.svg\";\nimport neutIcon from \"./neutral.svg\";\nimport sadIcon from \"./sad.svg\";\nimport disIcon from \"./disgusted.svg\";\nimport admIcon from \"./admiration.svg\";\nimport expIcon from \"./expectancy.svg\";\nimport surpIcon from \"./surprise-face.svg\";\n\nexport const icons = {\n  neutralny: neutIcon,\n  oczekiwanie: expIcon,\n  podziw: admIcon,\n  radosc: hapIcon,\n  smutek: sadIcon,\n  strach: fearIcon,\n  wstret: disIcon,\n  zaskoczenie: surpIcon,\n  zlosc: angIcon\n}\n\nexport const labels = [\n  {\n    id: \"radosc\",\n    label: \"Radość\",\n    icon: hapIcon,\n  },\n  {\n    id: \"smutek\",\n    label: \"Smutek\",\n    icon: sadIcon,\n  },\n  {\n    id: \"guilt\",\n    label: \"Podziw\",\n    icon: admIcon,\n  },\n  {\n    id: \"wstret\",\n    label: \"Wstręt\",\n    icon: disIcon,\n  },\n  {\n    id: \"zlosc\",\n    label: \"Złość\",\n    icon: angIcon,\n  },\n  {\n    id: \"strach\",\n    label: \"Strach\",\n    icon: fearIcon,\n  },\n  {\n    id: \"zaskoczenie\",\n    label: \"Zaskoczenie\",\n    icon: surpIcon,\n  },\n  {\n    id: \"oczekiwanie\",\n    label: \"Oczekiwanie\",\n    icon: expIcon,\n  },\n  {\n    id: \"neutralne\",\n    label: \"Neutralne\",\n    icon: neutIcon,\n  },\n];\nexport const annotationKey = \"annotated\";\nexport const skippedKey = \"skipped\";\nexport const userKey = \"user_id\"","export default __webpack_public_path__ + \"static/media/logo.a02c08aa.png\";","import React, {useEffect, useState} from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Link from \"@material-ui/core/Link\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { useCookies } from \"react-cookie\";\nimport {annotationKey, skippedKey, userKey} from \"../../helpers/settings\";\nimport useLocalStorage from \"react-localstorage-hook\";\nimport logo from './logo.png';\n\nfunction Copyright({setShowId}) {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {\"Built with React and Material UI for \"}\n      <Link color=\"inherit\" href=\"https://pwr.edu.pl/en/\">\n        <b>WUST</b>\n      </Link>{\" \"}\n      <span onClick={() => setShowId(true)}>:)</span>\n      {\".\"}<br/><span style={{fontSize: 10}}>\n      {\"Icons made by \"}\n      <Link href=\"https://www.flaticon.com/authors/freepik\" color=\"inherit\" title=\"Freepik\">Freepik</Link>\n      {\" from \"}\n      <Link href=\"https://www.flaticon.com/\" color=\"inherit\" title=\"Flaticon\">www.flaticon.com</Link></span>\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    position: \"relative\",\n  },\n  layout: {\n    width: \"auto\",\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\n      width: '90%',\n      marginLeft: \"auto\",\n      marginRight: \"auto\",\n    },\n  },\n  logo: {\n    width: 50,\n    marginRight: theme.spacing(2),\n\n  },\n  paper: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n    // padding: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n      // marginTop: theme.spacing(6),\n      marginBottom: theme.spacing(1),\n      // padding: theme.spacing(3),\n    },\n  },\n}));\n\nexport default function Layout({ children }) {\n  const classes = useStyles();\n  const [showId, setShowId] = useState(false);\n  const [cookies, setCookie] = useCookies([annotationKey, userKey, skippedKey]);\n  const [storage, setStorage] = useLocalStorage(annotationKey, []);\n  const [skipped, setSkipped] = useLocalStorage(skippedKey, []);\n\n  const annotations = cookies[annotationKey] || []\n  const skippedTweets = cookies[skippedKey] || []\n\n  useEffect(() => {\n    if(storage == null || (Array.isArray(storage) && storage.length === 0) || storage === '') {\n      setStorage(annotations);\n      setCookie(annotationKey, [])\n    }\n    if(skipped == null || (Array.isArray(skipped) && skipped.length === 0) || skipped === '') {\n      setSkipped(skippedTweets);\n      setCookie(skippedKey, [])\n    }\n  }, [])\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <AppBar position=\"absolute\" className={classes.appBar}>\n        <Toolbar>\n          <img className={classes.logo} src={logo} />\n          <Typography variant=\"h6\" color=\"inherit\" noWrap>\n            POLEMIC - POLish EMotIon Classifier\n          </Typography>\n          <span style={{'flex': 1}} />\n        </Toolbar>\n      </AppBar>\n      <main className={classes.layout}>\n        <Paper className={classes.paper}>\n          <React.Fragment>{children}</React.Fragment>\n        </Paper>\n        <Copyright setShowId={setShowId} />\n      </main>\n    </React.Fragment>\n  );\n}\n","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport SnackbarContent from \"@material-ui/core/SnackbarContent\";\nimport Icon from \"@material-ui/core/Icon\";\nimport { TwitterTweetEmbed } from \"react-twitter-embed\";\n\nimport \"./Tweet.css\";\n\nconst useStyles = makeStyles((theme) => ({\n  card: {\n    backgroundColor: \"rgba(29, 161, 242, 0.1)\",\n    width: \"400px\",\n    margin: 0,\n    padding: 0,\n    minHeight: \"100px\",\n    position: \"relative\",\n  },\n  tweet: {\n    width: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  error: {\n    backgroundColor: \"#f44336\",\n    color: \"#fff\",\n    fontWeight: 500,\n  },\n  errorMessage: {\n    textAlign: \"center\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  info: {\n    backgroundColor: \"#2196f336\",\n    color: \"#000\",\n    fontWeight: 500,\n  },\n  progress: {\n    position: \"absolute\",\n    left: \"45%\",\n    top: \"25px\",\n  },\n}));\n\nexport default function Tweet({ tweetContent = \"\", tweetId }) {\n  const classes = useStyles();\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n\n  const onLoad = () => {\n    setLoading(false);\n  };\n\n  const onFail = () => {\n    setLoading(false);\n    setError(true);\n  };\n\n  if (error === true) {\n    return (\n      <SnackbarContent\n        className={classes.error}\n        message={\n          <React.Fragment>\n            <span className={classes.errorMessage}>\n              <Icon style={{ marginRight: \"10px\" }}>error_outline</Icon>\n              Ups... There is a problem with this tweet. Please check if you\n              have Adblock Disabled and if you have then just skip this tweet.\n            </span>\n          </React.Fragment>\n        }\n      />\n    );\n  }\n\n  return (\n    tweetId && (\n      <React.Fragment>\n        <Card className={classes.card}>\n          <CardContent className={\"tweet-content\"}>\n            {\n              <TwitterTweetEmbed\n                onLoad={onLoad}\n                tweetId={tweetId}\n                options={{ maxWidth: 800, cards: \"hidden\" }}\n              />\n            }\n          </CardContent>\n          {loading && (\n            <CircularProgress color=\"secondary\" className={classes.progress} />\n          )}\n        </Card>\n      </React.Fragment>\n    )\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  FirebaseDatabaseMutation,\n  FirebaseDatabaseNode,\n} from \"@react-firebase/database\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport { useCookies } from \"react-cookie\";\nimport { nanoid } from \"nanoid\";\nimport Tweet from \"../Tweet/Tweet\";\nimport useLocalStorage from \"react-localstorage-hook\";\nimport {labels, annotationKey, skippedKey, userKey} from \"../../helpers/settings\";\n\n\nconst useStyles = makeStyles((theme) => ({\n  buttons: {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n  },\n  buttonContainer: {\n    margin: \"auto\",\n  },\n  button: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(1),\n    fontSize: \"1rem\",\n  },\n  labelIcon: {\n    height: theme.spacing(6),\n    marginRight: theme.spacing(2),\n  },\n}));\n\nconst path = \"tweets/\";\nconst cookieAge = 60 * 60 * 24 * 365; //year\n\nexport default function Form() {\n  const classes = useStyles();\n  const [settingSkip, setSettingSkip] = useState(null);\n  const [selectedTweet, setSelectedTweet] = useState(null)\n  const [cookies, setCookies] = useCookies([ userKey ]);\n  const [annotations, setAnnotations] = useLocalStorage(annotationKey)\n  const [skipped, setSkipped] = useLocalStorage(skippedKey)\n\n  if (cookies[userKey] == null) {\n    setCookies(userKey, nanoid(), { maxAge: cookieAge });\n  }\n\n  useEffect(() => {\n    if (settingSkip != null) {\n      setSkipped([...skipped, settingSkip]);\n      setSettingSkip(null);\n      setSelectedTweet(null);\n    }\n  }, [settingSkip]);\n\n  const handleSkip = (tweet) => {\n    setSettingSkip(tweet.id);\n  };\n\n  return (\n    <React.Fragment>\n      <Grid container spacing={3}>\n        {settingSkip == null && (\n          <React.Fragment>\n            <Grid item xs={12}>\n              {\n                selectedTweet && <Tweet tweetContent={selectedTweet.tweet} tweetId={\"\" + selectedTweet.id + \"\"} />\n              }\n            </Grid>\n\n            <React.Fragment>\n              {selectedTweet && (\n                <FirebaseDatabaseMutation\n                  type=\"update\"\n                  path={path + `${selectedTweet.pos}/`}\n                >\n                  {({ runMutation }) => {\n                    return (\n                      <Grid\n                        container\n                        alignContent=\"center\"\n                        justify=\"center\"\n                        alignItems=\"center\"\n                        className={classes.buttonContainer}\n                      >\n                        {labels.map((label) => (\n                          <Button\n                            key={label.id}\n                            // variant=\"contained\"\n                            variant=\"outlined\"\n                            color=\"secondary\"\n                            className={classes.button}\n                            onClick={async () => {\n                              setAnnotations(\n                                [...annotations, selectedTweet.id]\n                              );\n                              const request = {\n                                id: selectedTweet.id,\n                                tweet: selectedTweet.tweet,\n                                annotations: [\n                                  ...(selectedTweet\n                                    ? selectedTweet.annotations || []\n                                    : []),\n                                  label.id,\n                                ],\n                                annotatedBy: [\n                                  ...(selectedTweet\n                                    ? selectedTweet.annotatedBy || []\n                                    : []),\n                                  cookies[userKey],\n                                ],\n                              }\n                              setSelectedTweet(null)\n                              const { key } = await runMutation(request);\n                            }}\n                          >\n                            <img\n                              className={classes.labelIcon}\n                              src={label.icon}\n                            />\n                            {label.label}\n                          </Button>\n                        ))}\n                      </Grid>\n                    );\n                  }}\n                </FirebaseDatabaseMutation>\n              )}\n              <div className={classes.buttons}>\n                <Button\n                  variant=\"contained\"\n                  color=\"secondary\"\n                  onClick={() => handleSkip(selectedTweet)}\n                  className={classes.button}\n                >\n                  {\"Skip :(\"}\n                </Button>\n              </div>\n            </React.Fragment>\n            <FirebaseDatabaseNode path={path} orderByKey annotations skipped>\n              {(d) => {\n                if (!d.value) {\n                  return null;\n                }\n                let selectedTweets = d.value.filter(\n                  (tweet) =>\n                    !annotations.includes(tweet.id) &&\n                    !skipped.includes(tweet.id)\n                );\n                selectedTweets = selectedTweets.filter(\n                  (tweet) =>\n                    tweet.annotations == null || tweet.annotations.length < 3\n                );\n                const selectedTweetId =\n                  selectedTweets[\n                    Math.floor(Math.random() * selectedTweets.length)\n                  ].id;\n                const tweetIndex = d.value.findIndex(\n                  (tweet) => tweet.id === selectedTweetId\n                );\n                if (cookies[userKey] && d.value != null && selectedTweet == null) {\n                  setSelectedTweet({ ...d.value[tweetIndex], pos: tweetIndex })\n                }\n                return (<div />);\n              }}\n            </FirebaseDatabaseNode>\n          </React.Fragment>\n        )}\n      </Grid>\n    </React.Fragment>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport \"./animations.css\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useStyles = makeStyles((theme) => ({\n  animationContainer: {\n    position: \"absolute\",\n    top: 0,\n  },\n  innerContainer: {\n    position: \"absolute\",\n  },\n}));\n\nconst animations = [\"cats\", \"car\", \"bear\", \"bb8\", \"link\", \"ghost\"];\n\nexport default function LoadingAnimation() {\n  const classes = useStyles();\n  const [selectedAnimation, setSelectedAnimation] = useState(animations[Math.floor(Math.random() * animations.length)]);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setSelectedAnimation(selectedAnimation => {\n        const nextAnimationIndex = animations.indexOf(selectedAnimation) < animations.length - 1 ? animations.indexOf(selectedAnimation) + 1 : 0\n        return animations[nextAnimationIndex]\n      });\n    }, 10000);\n    return () => clearInterval(interval);\n  }, []);\n\n  return (\n    <div className={classes.animationContainer}>\n      {selectedAnimation === animations[0] && (\n        <div className={\"cat-container \" + classes.innerContainer}>\n          <Typography className=\"cat-info\" variant={\"h5\"} color={\"primary\"}>\n            Our highly trained cats are working on your request\n            <span className=\"dots\">...</span>\n          </Typography>\n          <div className=\"main\">\n            <span className=\"stand\"></span>\n            <div className=\"cat\">\n              <div className=\"body\"></div>\n              <div className=\"head\">\n                <div className=\"ear\"></div>\n                <div className=\"ear\"></div>\n              </div>\n              <div className=\"face\">\n                <div className=\"nose\"></div>\n                <div className=\"whisker-container\">\n                  <div className=\"whisker\"></div>\n                  <div className=\"whisker\"></div>\n                </div>\n                <div className=\"whisker-container\">\n                  <div className=\"whisker\"></div>\n                  <div className=\"whisker\"></div>\n                </div>\n              </div>\n              <div className=\"tail-container\">\n                <div className=\"tail\">\n                  <div className=\"tail\">\n                    <div className=\"tail\">\n                      <div className=\"tail\">\n                        <div className=\"tail\">\n                          <div className=\"tail\">\n                            <div className=\"tail\"></div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n      {selectedAnimation === animations[1] && (\n        <div className={\"car-container \" + classes.innerContainer}>\n          <div className=\"car\">\n            <div className=\"strike\"></div>\n            <div className=\"strike strike2\"></div>\n            <div className=\"strike strike3\"></div>\n            <div className=\"strike strike4\"></div>\n            <div className=\"strike strike5\"></div>\n            <div className=\"car-detail spoiler\"></div>\n            <div className=\"car-detail back\"></div>\n            <div className=\"car-detail center\"></div>\n            <div className=\"car-detail center1\"></div>\n            <div className=\"car-detail front\"></div>\n            <div className=\"car-detail wheel\"></div>\n            <div className=\"car-detail wheel wheel2\"></div>\n          </div>\n\n          <div className=\"text\">\n            <Typography component={\"span\"} variant={\"h5\"} color={\"primary\"}>\n              We're pushing really hard to get your request on time\n            </Typography>\n            <span className=\"dots\">...</span>\n          </div>\n        </div>\n      )}\n      {selectedAnimation === animations[2] && (\n        <div className={\"bear-container \" + classes.innerContainer}>\n          <div className=\"text-prev\">\n            <Typography component={\"span\"} variant={\"h4\"} color={\"primary\"}>\n              Don't worry, it's just our russian agent\n            </Typography>\n          </div>\n          <div className=\"bear\">\n            <div className=\"bear__ears\">\n              <div className=\"bear__ears__left ear\"></div>\n              <div className=\"bear__ears__right ear\"></div>\n            </div>\n            <div className=\"bear__body\">\n              <div className=\"bear__eyes\">\n                <div className=\"bear__eyes--left eye\"></div>\n                <div className=\"bear__eyes--right eye\"></div>\n              </div>\n              <div className=\"bear__nose\">\n                <div className=\"bear__nose--inner\"></div>\n              </div>\n            </div>\n          </div>\n          <div className=\"text-after\">\n            <Typography component={\"span\"} variant={\"h4\"} color={\"primary\"}>\n              He says that your request is on the server\n            </Typography>\n            <span className=\"dots\">...</span>\n          </div>\n        </div>\n      )}\n      {\n        selectedAnimation === animations[3] && (\n          <div className={\"bb8-container \" + classes.innerContainer}>\n            <div className=\"text-prev\">\n              <Typography component={\"span\"} variant={\"h4\"} color={\"primary\"}>\n                Your request is in a galaxy far, far away\n              </Typography><span className=\"dots\">...</span>\n            </div>\n            <div className=\"bb8\"></div>\n            <div className=\"text-after\">\n              <Typography component={\"span\"} variant={\"h4\"} color={\"primary\"}>\n                But don't worry, BB8 is on its way :)\n              </Typography>\n            </div>\n          </div>\n        )\n      }\n      {\n        selectedAnimation === animations[4] && (\n          <div className={\"link-animation-container \" + classes.innerContainer}>\n            <div className=\"text-prev\">\n              <Typography component={\"span\"} variant={\"h3\"} color={\"primary\"}>\n                Link is fighting his magic sword off to get that response for you\n              </Typography><br/><span className=\"dots\" style={{transform: \"scale(2.5)\"}}>...</span>\n            </div>\n            <div className=\"link-animation\"></div>\n          </div>\n        )\n      }\n      {\n        selectedAnimation === animations[5] && (\n          <div className={\"ghost-animation-container \" + classes.innerContainer}>\n            <div className=\"text-prev\">\n              <Typography component={\"span\"} variant={\"h3\"} color={\"primary\"}>\n                I'm not a ghost, I'm just dead inside\n              </Typography><br/><span className=\"dots\" style={{transform: \"scale(2.5)\"}}>...</span>\n            </div>\n            <div className=\"ghost\">\n              <div className=\"hat\">\n                <div className=\"hat1\">\n                  <div className=\"s1\"></div>\n                </div>\n              </div>\n              <div className=\"face\">\n                <div className=\"eye-l\">\n                  <div className=\"dot1\"></div>\n                  <div className=\"dot2\"></div>\n                </div>\n                <div className=\"eye-r\">\n                  <div className=\"dot1\"></div>\n                  <div className=\"dot2\"></div>\n                </div>\n                <div className=\"blsh-l\"></div>\n                <div className=\"blsh-r\"></div>\n                <div className=\"mouth\"></div>\n              </div>\n              <div className=\"hand-l\"></div>\n              <div className=\"hand-r\"></div>\n              <div className=\"pumpkin\">\n                <div className=\"handle\"></div>\n                <div className=\"p1\"></div>\n                <div className=\"p2\"></div>\n                <div className=\"p3\"></div>\n                <div className=\"p4\"></div>\n                <div className=\"e-l\"></div>\n                <div className=\"e-r\"></div>\n                <div className=\"nose\"></div>\n                <div className=\"m\">\n                  <div className=\"t1\"></div>\n                  <div className=\"t2\"></div>\n                  <div className=\"t3\"></div>\n                  <div className=\"t4\"></div>\n                </div>\n              </div>\n            </div>\n          </div>\n        )\n      }\n    </div>\n  );\n}\n","import React, { useCallback, useMemo } from \"react\";\nimport { useDropzone } from \"react-dropzone\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport LoadingAnimation from \"./LoadingAnimation\";\n\nconst useStyles = makeStyles((theme) => ({\n  zone: {\n    flex: 1,\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    padding: \"20px\",\n    fontSize: \"1.2rem\",\n    borderWidth: 2,\n    borderRadius: 2,\n    borderColor: \"#eeeeee\",\n    borderStyle: \"dashed\",\n    backgroundColor: \"#fafafa\",\n    color: \"#bdbdbd\",\n    outline: \"none\",\n    transition: \"border .24s ease-in-out\",\n    position: \"relative\",\n    minHeight: \"110px\",\n  },\n  activeStyle: {\n    borderColor: \"#2196f3\",\n  },\n  acceptStyle: {\n    borderColor: \"#00e676\",\n  },\n  rejectStyle: {\n    borderColor: \"#ff1744\",\n    color: \"#ff1744\",\n  },\n}));\n\nexport default function DropZone({\n  onFileChange = () => {},\n  isLoading = false,\n}) {\n  const classes = useStyles();\n  const onDrop = useCallback((acceptedFiles) => {\n    // Do something with the files\n    const reader = new FileReader();\n\n    reader.onabort = () => console.log(\"file reading was aborted\");\n    reader.onerror = () => console.log(\"file reading failed\");\n    reader.onload = () => {\n      // Parse CSV file\n      const result = JSON.parse(reader.result);\n      if (Array.isArray(result) && result[0].id != null) {\n        onFileChange(\n          result.filter((item, pos) => {\n            return result.findIndex((el) => el.id === item.id) === pos;\n          })\n        );\n      }\n    };\n\n    // read file contents\n    acceptedFiles.forEach((file) => reader.readAsText(file));\n  }, []);\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive,\n    isDragAccept,\n    isDragReject,\n  } = useDropzone({ accept: \"application/json\", onDrop });\n\n  const style = `${classes.zone} ${isDragActive ? classes.activeStyle : \"\"} ${\n    isDragAccept ? classes.acceptStyle : \"\"\n  } ${isDragReject ? classes.rejectStyle : \"\"}`;\n\n  return (\n    <div className={style} {...getRootProps()}>\n      <input {...getInputProps()} />\n      {!isLoading ? (\n        isDragActive ? (\n          isDragAccept ? (\n            <p>Drop the files here ...</p>\n          ) : (\n            <p>\n              You cannot drop this type of file, we only accept{\" \"}\n              <strong>.json</strong> files\n            </p>\n          )\n        ) : (\n          <p>Drag 'n' drop some files here, or click to select files</p>\n        )\n      ) : (\n        \"\"\n      )}\n      {isLoading && <LoadingAnimation />}\n    </div>\n  );\n}\n","// Firebase Config\nexport const config = {\n  apiKey: \"AIzaSyAoAangmjRhPmpGj9TZ9EpAZJYqxpTCVH4\",\n  authDomain: \"tweet-annotator-7b789.firebaseapp.com\",\n  databaseURL: \"https://tweet-annotator-7b789.firebaseio.com\",\n  projectId: \"tweet-annotator-7b789\",\n  storageBucket: \"tweet-annotator-7b789.appspot.com\",\n  messagingSenderId: \"1057840760122\",\n  appId: \"1:1057840760122:web:c036eba1a841db18e7bc03\"\n};\n\n// This should have eng. keys but API returns polish\nexport const emotions = {\n  neutralny: \"Neutralny\",\n  oczekiwanie: \"Oczekiwanie\",\n  podziw: \"Podziw\",\n  radosc: \"Radość\",\n  smutek: \"Smutek\",\n  strach: \"Strach\",\n  wstret: \"Wstręt\",\n  zaskoczenie: \"Zaskoczenie\",\n  zlosc: \"Złość\"\n}\n\nexport const emotionColors = {\n  neutralny: \"#dfdfdf\",\n  oczekiwanie: \"#fda752\",\n  podziw: \"#52fe52\",\n  radosc: \"#ffff53\",\n  smutek: \"#5050fe\",\n  strach: \"#009400\",\n  wstret: \"#fe52fe\",\n  zaskoczenie: \"#58bbfe\",\n  zlosc: \"#fe0000\"\n}","import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport { Chart } from \"react-google-charts\";\nimport { emotions, emotionColors } from \"../../helpers/config\";\nimport { icons } from \"../../helpers/settings\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  icon: {\n    maxWidth: \"60px\",\n  },\n  container: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"center\"\n  },\n  iconContainer: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  moreButton: {\n    cursor: \"pointer\"\n  }\n}));\n\nexport default function Result({ data, id, onClickMore = () => {} }) {\n  const classes = useStyles();\n  if (data == null) {\n    return \"There was an error processing your request :(\";\n  }\n\n  const sortedArray = Object.entries(data).sort(function (a, b) {\n    return b[1] - a[1];\n  });\n\n  const onLinkClick = () => {\n    onClickMore(id)\n  }\n\n  const values = sortedArray\n    .slice(0, 3)\n    .map((el) => [\n      emotions[el[0]],\n      Number(Number(el[1] * 100).toFixed(1)),\n      emotionColors[el[0]],\n      null,\n    ]);\n\n  const emotionIcon = icons[sortedArray[0][0]];\n\n  return (\n    <div className={classes.container}>\n      <Chart\n        width={\"200px\"}\n        height={\"300px\"}\n        chartType=\"BarChart\"\n        loader={<div>Loading Chart</div>}\n        data={[\n          [\n            \"Emotion\",\n            \"Certainty [%]\",\n            { role: \"style\" },\n            {\n              sourceColumn: 0,\n              role: \"annotation\",\n              type: \"string\",\n              calc: \"stringify\",\n            },\n          ],\n          ...values,\n        ]}\n        options={{\n          titleTextStyle: { fontSize: 15 },\n          title: \"Top 3 emotions\",\n          // chartArea: { width: \"90%\" },\n          bar: { groupWidth: \"95%\" },\n          legend: { position: \"none\" },\n        }}\n        // For tests\n        rootProps={{ \"data-testid\": \"1\" }}\n      />\n      <div className={classes.iconContainer}>\n        <img\n          className={classes.icon}\n          src={emotionIcon}\n          aria-label={values[0][0]}\n        />\n        <Typography className={classes.moreButton} onClick={onLinkClick} variant=\"h6\" color=\"secondary\" align=\"center\">{\"More\"}</Typography>\n      </div>\n    </div>\n  );\n}","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport SnackbarContent from \"@material-ui/core/SnackbarContent\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Chart } from \"react-google-charts\";\nimport { emotions, emotionColors } from \"../../helpers/config\";\nimport { icons } from \"../../helpers/settings\";\n\nconst sortedColumns = [\n  \"zlosc\",\n  \"wstret\",\n  \"strach\",\n  \"smutek\",\n  \"neutralny\",\n  \"zaskoczenie\",\n  \"oczekiwanie\",\n  \"podziw\",\n  \"radosc\",\n];\n\nconst modelNames = [\"Original\", \"Słowosieć\", \"Brand24\"];\n\nconst useStyles = makeStyles((theme) => ({\n  charts: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    marginTop: theme.spacing(1),\n  },\n  dialogContent: {\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  title: {\n    textAlign: \"center\",\n  },\n  sentiment: {\n    paddingTop: theme.spacing(2),\n    textAlign: \"center\",\n  },\n}));\n\nfunction getSentiment(topEmotion) {\n  if (sortedColumns.slice(0, 4).includes(topEmotion)) {\n    return <span style={{color: 'red'}}>{\"Negatywny\"}</span>;\n  }\n  if (sortedColumns.slice(6).includes(topEmotion)) {\n    return <span style={{color: 'lightGreen'}}>{\"Pozytywny\"}</span>;\n  }\n  return \"Neutralny\";\n}\n\nexport default function ResultDialog({ onClose, open, tweet }) {\n  const classes = useStyles();\n  if (tweet == null) {\n    return null;\n  }\n\n  const valuesModel1 = sortedColumns.map((emotion) => [\n    emotions[emotion],\n    Number(Number(tweet.model1[emotion] * 100).toFixed(1)),\n    emotionColors[emotion],\n    null,\n  ]);\n  const valuesModel2 = sortedColumns.map((emotion) => [\n    emotions[emotion],\n    Number(Number(tweet.model2[emotion] * 100).toFixed(1)),\n    emotionColors[emotion],\n    null,\n  ]);\n  const valuesModel3 = sortedColumns.map((emotion) => [\n    emotions[emotion],\n    Number(Number(tweet.model3[emotion] * 100).toFixed(1)),\n    emotionColors[emotion],\n    null,\n  ]);\n\n  const handleClose = () => {\n    onClose();\n  };\n\n  const handleListItemClick = (value) => {\n    onClose(value);\n  };\n\n  const scoreSum = [tweet.model1, tweet.model2, tweet.model3].reduce(\n    (acc, item) => {\n      for (const emotion in item) {\n        acc[emotion] = item[emotion] + (acc[emotion] || 0);\n      }\n      return acc;\n    }, {}\n  );\n\n  return (\n    <Dialog\n      onClose={handleClose}\n      aria-labelledby=\"result-dialog\"\n      open={open}\n      maxWidth={false}\n      fullWidth={true}\n    >\n      <DialogTitle id=\"result-dialog\" className={classes.title}>\n        Tweet results\n      </DialogTitle>\n      <DialogContent className={classes.dialogContent}>\n        <div className={classes.info}>\n          <Typography variant={\"subtitle2\"}>{\"Tweet's content\"}</Typography>\n          <SnackbarContent message={tweet.content} />\n          <Typography className={classes.sentiment} variant={\"h6\"}>\n            {\"Avg. Sentiment: \"}\n            <span>{getSentiment(Object.entries(scoreSum).sort(function (a, b) {\n              return b[1] - a[1];\n            })[0][0])}</span>\n          </Typography>\n        </div>\n        <div className={classes.charts}>\n          {[valuesModel1, valuesModel2, valuesModel3].map((values, idx) => (\n            <Chart\n              width={\"500px\"}\n              height={\"400px\"}\n              chartType=\"BarChart\"\n              loader={<div>Loading Chart</div>}\n              data={[\n                [\n                  \"Emotion\",\n                  \"Certainty [%]\",\n                  { role: \"style\" },\n                  {\n                    sourceColumn: 0,\n                    role: \"annotation\",\n                    type: \"string\",\n                    calc: \"stringify\",\n                  },\n                ],\n                ...values,\n              ]}\n              options={{\n                title: `Emotions - ${modelNames[idx]}`,\n                titleTextStyle: { fontSize: 18 },\n                // chartArea: { width: \"90%\" },\n                bar: { groupWidth: \"90%\" },\n                legend: { position: \"none\" },\n                hAxis: {\n                  title: \"Certainty [%]\",\n                  titleTextStyle: { fontSize: 16 },\n                },\n              }}\n              // For tests\n              rootProps={{ \"data-testid\": idx }}\n            />\n          ))}\n        </div>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose} color=\"primary\">\n          Close\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Tweet from \"../Tweet/Tweet\";\nimport Result from \"../Result/Result\";\nimport ResultDialog from \"../ResultDialog/ResultDialog\";\n\nconst useStyles = makeStyles((theme) => ({\n  buttons: {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n  },\n  buttonContainer: {\n    margin: \"auto\",\n  },\n  button: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(1),\n    fontSize: \"1rem\",\n  },\n  labelIcon: {\n    height: theme.spacing(6),\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    paddingLeft: theme.spacing(1),\n    paddingTop: theme.spacing(1),\n    textAlign: \"center\",\n  },\n  table: {\n    maxHeight: \"70vh\",\n  },\n  body: {\n    height: \"100%\",\n    overflowY: \"auto\",\n  },\n  tweetClass: {\n    padding: 0,\n    width: 400\n  },\n  cellResult: {\n    borderRight: \"1px solid black\",\n    textAlign: \"center\"\n  }\n}));\n\nexport default function TweetTable({ tweets = [], isLoading = false }) {\n  const classes = useStyles();\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n  const [selectedTweet, setSelectedTweet] = useState(null);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  const handleClickMore = (id) => {\n    const newSelectedTweet = tweets.find(el => el.id === id)\n    setSelectedTweet(newSelectedTweet)\n  }\n\n  const clearSelectedTweet = () => {\n    setSelectedTweet(null)\n  }\n\n  return (\n    <React.Fragment>\n      <TableContainer className={classes.table}>\n        <Table size=\"small\">\n          <TableHead>\n            <TableRow>\n              <TableCell>Tweet</TableCell>\n              <TableCell align=\"center\">Model - Original</TableCell>\n              <TableCell align=\"center\">Model - Słowosieć</TableCell>\n              <TableCell align=\"center\">Model - Brand24</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {tweets\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n              .map((row) => (\n                <TableRow key={row.id}>\n                  <TableCell\n                    padding=\"none\"\n                    size=\"small\"\n                    className={classes.tweetClass}\n                  >\n                    <Tweet\n                      tweetContent={row.content}\n                      tweetId={\"\" + row.id.split(\"/\")[3] + \"\"}\n                    />\n                  </TableCell>\n                  <TableCell\n                    align=\"right\"\n                    className={classes.cellResult}\n                    style={{\n                      color: row.status === \"On Time\" ? \"green\" : \"red\",\n                    }}\n                  >\n                    {isLoading && <div>{\"Model's API is working\"}<br/><CircularProgress color=\"secondary\" /></div>}\n                    {!isLoading && <Result data={row.model1} id={row.id} onClickMore={handleClickMore} />}\n                  </TableCell>\n                  <TableCell\n                    align=\"right\"\n                    className={classes.cellResult}\n                    style={{\n                      color: row.status === \"On Time\" ? \"green\" : \"red\",\n                    }}\n                  >\n                    {isLoading && <div>{\"Model's API not available\"}<br/><CircularProgress color=\"secondary\" /></div>}\n                    {!isLoading && <Result data={row.model2} id={row.id} onClickMore={handleClickMore} />}\n                  </TableCell>\n                  <TableCell\n                    align=\"right\"\n                    className={classes.cellResult}\n                    style={{\n                      color: row.status === \"On Time\" ? \"green\" : \"red\",\n                    }}\n                  >\n                    {isLoading && <div>{\"Model's API not available\"}<br/><CircularProgress color=\"secondary\" /></div>}\n                    {!isLoading && <Result data={row.model3} id={row.id} onClickMore={handleClickMore} />}\n                  </TableCell>\n                </TableRow>\n              ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      {tweets.length !== 0 && (\n        <TablePagination\n          rowsPerPageOptions={[10, 25, 100]}\n          component=\"div\"\n          count={tweets.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      )}\n      {tweets.length === 0 && (\n        <Typography\n          component=\"h2\"\n          variant=\"h6\"\n          color=\"textSecondary\"\n          gutterBottom\n          className={classes.title}\n        >\n          Please upload file with tweets\n        </Typography>\n      )}\n      <ResultDialog onClose={clearSelectedTweet} open={selectedTweet != null} tweet={selectedTweet} />\n    </React.Fragment>\n  );\n}\n","const initialState = {\n  tweets: [],\n  isRequestPending: false\n};\n\nconst SET_TWEETS = \"SET_TWEETS\";\nconst UPDATE_TWEETS = \"UPDATE_TWEETS\";\nconst REMOVE_TWEETS = \"REMOVE_TWEETS\";\n\nconst actions = {\n  SET_TWEETS: SET_TWEETS,\n  UPDATE_TWEETS: UPDATE_TWEETS,\n  REMOVE_TWEETS: REMOVE_TWEETS,\n};\n\nfunction updateTweetWithEmotions(tweet, tweetsWithEmotions) {\n  const matchingTweet = tweetsWithEmotions.find(el => el.id === tweet.id)\n  if(matchingTweet != null) {\n    return { ...matchingTweet, ...tweet }\n  }\n  return tweet\n}\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case SET_TWEETS:\n      return { ...state, isRequestPending: true, tweets: action.data };\n    case UPDATE_TWEETS:\n      return { ...state, isRequestPending: false, tweets: state.tweets.map(tweet => updateTweetWithEmotions(tweet, action.data)) };\n    case REMOVE_TWEETS:\n      return { ...state, tweets: [] };\n    default:\n      throw new Error();\n  }\n}\n\nexport { reducer, initialState, actions };\n","import React, {useState, useReducer, useEffect} from \"react\";\nimport firebase from \"firebase/app\";\nimport \"firebase/database\";\nimport {\n  createMuiTheme,\n  makeStyles,\n  ThemeProvider,\n} from \"@material-ui/core/styles\";\nimport secondary from \"@material-ui/core/colors/indigo\";\nimport { CookiesProvider } from \"react-cookie\";\n\nimport Layout from \"../Layout/Layout\";\nimport Form from \"../Form/Form\";\nimport Placeholder from \"../Placeholder/Placeholder\";\nimport DropZone from \"../DropZone/DropZone\";\nimport Table from \"../Table/Table\";\nimport { reducer, actions, initialState } from \"../../helpers/twitterReducer\";\nimport {getTweetsResults} from \"../../services/apiService\";\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#852508\",\n    },\n    secondary: secondary,\n  },\n});\n\nfunction App() {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  const onTweetsChange = (newTweets = []) => {\n    dispatch({ type: actions.SET_TWEETS, data: newTweets });\n  };\n\n  useEffect(() => {\n    if(state.isRequestPending) {\n      const request = getTweetsResults(state.tweets)\n      request.then(response => {\n        dispatch({\n          type: actions.UPDATE_TWEETS,\n          data: response.data\n        })\n      })\n    }\n  }, [state.isRequestPending])\n\n  return (\n    <CookiesProvider>\n      <ThemeProvider theme={theme}>\n        <Layout>\n          <DropZone onFileChange={onTweetsChange} isLoading={state.isRequestPending} />\n          <Table tweets={state.tweets} isLoading={state.isRequestPending} />\n        </Layout>\n      </ThemeProvider>\n    </CookiesProvider>\n  );\n}\n\nexport default App;\n","const { REACT_APP_API_URL } = process.env\n\nexport function getTweetsResults(tweets) {\n\n  return fetch(`${REACT_APP_API_URL}predictions/`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      tweets: tweets.map(el => ({ \"id\": el.id, \"text\": el.content }))\n    })\n  })\n    .then(data => data.json())\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}