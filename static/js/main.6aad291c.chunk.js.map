{"version":3,"sources":["components/Layout/logo.png","components/Layout/chromewebstore.png","components/Layout/Layout.js","components/DropZone/LoadingAnimation.js","components/DropZone/statistics.png","components/DropZone/DropZone.js","components/Tweet/Tweet.js","helpers/config.js","helpers/happiness.svg","helpers/fear.svg","helpers/anger.svg","helpers/neutral.svg","helpers/sad.svg","helpers/disgusted.svg","helpers/admiration.svg","helpers/expectancy.svg","helpers/surprise-face.svg","helpers/settings.js","components/Result/Result.js","components/ResultDialog/ResultDialog.js","components/Table/Table.js","helpers/twitterReducer.js","components/ServerErrorDialog/ServerErrorDialog.js","components/App/App.js","services/apiService.js","reportWebVitals.js","index.js"],"names":["Copyright","Typography","variant","color","align","Link","href","style","fontSize","title","useStyles","makeStyles","theme","appBar","position","layout","width","marginLeft","spacing","marginRight","breakpoints","up","logo","paper","marginTop","marginBottom","Layout","children","classes","Fragment","CssBaseline","AppBar","className","Toolbar","alt","src","noWrap","paddingRight","rel","target","aria-label","chromeLogo","Paper","animationContainer","top","innerContainer","animations","LoadingAnimation","useState","Math","floor","random","length","selectedAnimation","setSelectedAnimation","useEffect","interval","setInterval","nextAnimationIndex","indexOf","clearInterval","component","transform","zone","flex","display","flexDirection","alignItems","padding","borderWidth","borderRadius","borderColor","borderStyle","backgroundColor","outline","transition","minHeight","rowDisplay","activeStyle","acceptStyle","rejectStyle","iconContainer","justifyContent","cursor","icon","maxWidth","moreButton","fullInfo","textAlign","customTextContainer","wrapper","customTextInput","DropZone","onFileChange","onAskForSampleData","isLoading","onDrop","useCallback","acceptedFiles","reader","FileReader","onabort","console","log","onerror","onload","result","JSON","parse","Array","isArray","id","filter","item","pos","findIndex","el","forEach","file","readAsText","useDropzone","accept","getRootProps","getInputProps","isDragActive","isDragAccept","isDragReject","React","value","setValue","onClick","dataIcon","TextField","label","placeholder","multiline","rows","onChange","event","Button","disabled","date","content","author","source","endIcon","Icon","card","margin","tweet","error","fontWeight","errorMessage","info","textPlaceholder","progress","left","Tweet","tweetId","tweetContent","type","loading","setLoading","Card","CardContent","onLoad","data","options","cards","CircularProgress","emotions","neutralny","oczekiwanie","podziw","radosc","smutek","strach","wstret","zaskoczenie","zlosc","emotionColors","icons","neutIcon","expIcon","admIcon","hapIcon","sadIcon","fearIcon","disIcon","surpIcon","angIcon","container","Result","onClickMore","sortedArray","Object","entries","sort","a","b","values","slice","map","Number","toFixed","emotionIcon","height","chartType","loader","role","sourceColumn","calc","titleTextStyle","bar","groupWidth","legend","rootProps","sortedColumns","modelNames","charts","dialogContent","sentiment","paddingTop","ResultDialog","onClose","open","topEmotion","valuesModel1","emotion","model1","valuesModel2","model2","valuesModel3","model3","handleClose","scoreSum","reduce","acc","Dialog","aria-labelledby","fullWidth","DialogTitle","DialogContent","SnackbarContent","message","includes","idx","hAxis","DialogActions","buttons","buttonContainer","button","labelIcon","paddingLeft","table","maxHeight","body","overflowY","tweetClass","cellResult","borderRight","TweetTable","tweets","page","setPage","rowsPerPage","setRowsPerPage","selectedTweet","setSelectedTweet","handleClickMore","newSelectedTweet","find","TableContainer","Table","size","TableHead","TableRow","TableCell","TableBody","row","split","status","TablePagination","rowsPerPageOptions","count","onChangePage","newPage","onChangeRowsPerPage","gutterBottom","initialState","isRequestPending","SET_TWEETS","UPDATE_TWEETS","REMOVE_TWEETS","SET_FULL_TWEETS","actions","reducer","state","action","tweetsWithEmotions","matchingTweet","updateTweetWithEmotions","Error","Transition","forwardRef","props","ref","Slide","direction","ServerErrorDialog","onAccept","TransitionComponent","keepMounted","aria-describedby","DialogContentText","createMuiTheme","palette","primary","main","secondary","App","useReducer","dispatch","isDialogOpen","setIsDialogOpen","fetch","method","headers","then","json","results","process","stringify","response","catch","err","CookiesProvider","ThemeProvider","newTweets","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6aad291c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.a02c08aa.png\";","export default __webpack_public_path__ + \"static/media/chromewebstore.d3512f0d.png\";","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Link from \"@material-ui/core/Link\";\nimport Typography from \"@material-ui/core/Typography\";\nimport logo from './logo.png';\nimport chromeLogo from './chromewebstore.png';\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {\"Built with React and Material UI for \"}\n      <Link color=\"inherit\" href=\"https://pwr.edu.pl/en/\">\n        <b>WUST</b>\n      </Link>{\" \"}\n      {\".\"}<br/><span style={{fontSize: 10}}>\n      {\"Icons made by \"}\n      <Link href=\"https://www.flaticon.com/authors/freepik\" color=\"inherit\" title=\"Freepik\">Freepik</Link>\n      {\" from \"}\n      <Link href=\"https://www.flaticon.com/\" color=\"inherit\" title=\"Flaticon\">www.flaticon.com</Link></span>\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    position: \"relative\",\n  },\n  layout: {\n    width: \"auto\",\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\n      width: '90%',\n      marginLeft: \"auto\",\n      marginRight: \"auto\",\n    },\n  },\n  logo: {\n    width: 50,\n    marginRight: theme.spacing(2),\n\n  },\n  paper: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n    // padding: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n      // marginTop: theme.spacing(6),\n      marginBottom: theme.spacing(1),\n      // padding: theme.spacing(3),\n    },\n  },\n}));\n\nexport default function Layout({ children }) {\n  const classes = useStyles();\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <AppBar position=\"absolute\" className={classes.appBar}>\n        <Toolbar>\n          <img alt={\"Logo\"} className={classes.logo} src={logo} />\n          <Typography variant=\"h6\" color=\"inherit\" noWrap>\n            POLEMIC - POLish EMotIon Classifier\n          </Typography>\n          <span style={{'flex': 1}} />\n          <Typography style={{paddingRight: '10px'}} variant=\"subtitle1\" color=\"inherit\" noWrap>\n            {\"Use Chrome Extension \"}\n          </Typography>\n          <a rel={\"noreferrer\"} target={\"_blank\"} aria-label={\"extension link\"} href={\"https://chrome.google.com/webstore/detail/polemic/amohljmlgkapaaplajmicnbegfheolae\"}>\n            <img alt={\"POLEMIC - chrome extension\"} className={classes.logo} src={chromeLogo} /></a>\n        </Toolbar>\n      </AppBar>\n      <main className={classes.layout}>\n        <Paper className={classes.paper}>\n          <React.Fragment>{children}</React.Fragment>\n        </Paper>\n        <Copyright />\n      </main>\n    </React.Fragment>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport \"./animations.css\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useStyles = makeStyles((theme) => ({\n  animationContainer: {\n    position: \"absolute\",\n    top: 0,\n  },\n  innerContainer: {\n    position: \"absolute\",\n  },\n}));\n\nconst animations = [\"cats\", \"car\", \"bear\", \"bb8\", \"link\", \"ghost\"];\n\nexport default function LoadingAnimation() {\n  const classes = useStyles();\n  const [selectedAnimation, setSelectedAnimation] = useState(animations[Math.floor(Math.random() * animations.length)]);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setSelectedAnimation(selectedAnimation => {\n        const nextAnimationIndex = animations.indexOf(selectedAnimation) < animations.length - 1 ? animations.indexOf(selectedAnimation) + 1 : 0\n        return animations[nextAnimationIndex]\n      });\n    }, 10000);\n    return () => clearInterval(interval);\n  }, []);\n\n  return (\n    <div className={classes.animationContainer}>\n      {selectedAnimation === animations[0] && (\n        <div className={\"cat-container \" + classes.innerContainer}>\n          <Typography className=\"cat-info\" variant={\"h5\"} color={\"primary\"}>\n            Our highly trained cats are working on your request\n            <span className=\"dots\">...</span>\n          </Typography>\n          <div className=\"main\">\n            <span className=\"stand\"></span>\n            <div className=\"cat\">\n              <div className=\"body\"></div>\n              <div className=\"head\">\n                <div className=\"ear\"></div>\n                <div className=\"ear\"></div>\n              </div>\n              <div className=\"face\">\n                <div className=\"nose\"></div>\n                <div className=\"whisker-container\">\n                  <div className=\"whisker\"></div>\n                  <div className=\"whisker\"></div>\n                </div>\n                <div className=\"whisker-container\">\n                  <div className=\"whisker\"></div>\n                  <div className=\"whisker\"></div>\n                </div>\n              </div>\n              <div className=\"tail-container\">\n                <div className=\"tail\">\n                  <div className=\"tail\">\n                    <div className=\"tail\">\n                      <div className=\"tail\">\n                        <div className=\"tail\">\n                          <div className=\"tail\">\n                            <div className=\"tail\"></div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n      {selectedAnimation === animations[1] && (\n        <div className={\"car-container \" + classes.innerContainer}>\n          <div className=\"car\">\n            <div className=\"strike\"></div>\n            <div className=\"strike strike2\"></div>\n            <div className=\"strike strike3\"></div>\n            <div className=\"strike strike4\"></div>\n            <div className=\"strike strike5\"></div>\n            <div className=\"car-detail spoiler\"></div>\n            <div className=\"car-detail back\"></div>\n            <div className=\"car-detail center\"></div>\n            <div className=\"car-detail center1\"></div>\n            <div className=\"car-detail front\"></div>\n            <div className=\"car-detail wheel\"></div>\n            <div className=\"car-detail wheel wheel2\"></div>\n          </div>\n\n          <div className=\"text\">\n            <Typography component={\"span\"} variant={\"h5\"} color={\"primary\"}>\n              We're pushing really hard to get your request on time\n            </Typography>\n            <span className=\"dots\">...</span>\n          </div>\n        </div>\n      )}\n      {selectedAnimation === animations[2] && (\n        <div className={\"bear-container \" + classes.innerContainer}>\n          <div className=\"text-prev\">\n            <Typography component={\"span\"} variant={\"h4\"} color={\"primary\"}>\n              Don't worry, it's just our russian agent\n            </Typography>\n          </div>\n          <div className=\"bear\">\n            <div className=\"bear__ears\">\n              <div className=\"bear__ears__left ear\"></div>\n              <div className=\"bear__ears__right ear\"></div>\n            </div>\n            <div className=\"bear__body\">\n              <div className=\"bear__eyes\">\n                <div className=\"bear__eyes--left eye\"></div>\n                <div className=\"bear__eyes--right eye\"></div>\n              </div>\n              <div className=\"bear__nose\">\n                <div className=\"bear__nose--inner\"></div>\n              </div>\n            </div>\n          </div>\n          <div className=\"text-after\">\n            <Typography component={\"span\"} variant={\"h4\"} color={\"primary\"}>\n              He says that your request is on the server\n            </Typography>\n            <span className=\"dots\">...</span>\n          </div>\n        </div>\n      )}\n      {\n        selectedAnimation === animations[3] && (\n          <div className={\"bb8-container \" + classes.innerContainer}>\n            <div className=\"text-prev\">\n              <Typography component={\"span\"} variant={\"h4\"} color={\"primary\"}>\n                Your request is in a galaxy far, far away\n              </Typography><span className=\"dots\">...</span>\n            </div>\n            <div className=\"bb8\"></div>\n            <div className=\"text-after\">\n              <Typography component={\"span\"} variant={\"h4\"} color={\"primary\"}>\n                But don't worry, BB8 is on its way :)\n              </Typography>\n            </div>\n          </div>\n        )\n      }\n      {\n        selectedAnimation === animations[4] && (\n          <div className={\"link-animation-container \" + classes.innerContainer}>\n            <div className=\"text-prev\">\n              <Typography component={\"span\"} variant={\"h3\"} color={\"primary\"}>\n                Link is fighting his magic sword off to get that response for you\n              </Typography><br/><span className=\"dots\" style={{transform: \"scale(2.5)\"}}>...</span>\n            </div>\n            <div className=\"link-animation\"></div>\n          </div>\n        )\n      }\n      {\n        selectedAnimation === animations[5] && (\n          <div className={\"ghost-animation-container \" + classes.innerContainer}>\n            <div className=\"text-prev\">\n              <Typography component={\"span\"} variant={\"h3\"} color={\"primary\"}>\n                I'm not a ghost, I'm just dead inside\n              </Typography><br/><span className=\"dots\" style={{transform: \"scale(2.5)\"}}>...</span>\n            </div>\n            <div className=\"ghost\">\n              <div className=\"hat\">\n                <div className=\"hat1\">\n                  <div className=\"s1\"></div>\n                </div>\n              </div>\n              <div className=\"face\">\n                <div className=\"eye-l\">\n                  <div className=\"dot1\"></div>\n                  <div className=\"dot2\"></div>\n                </div>\n                <div className=\"eye-r\">\n                  <div className=\"dot1\"></div>\n                  <div className=\"dot2\"></div>\n                </div>\n                <div className=\"blsh-l\"></div>\n                <div className=\"blsh-r\"></div>\n                <div className=\"mouth\"></div>\n              </div>\n              <div className=\"hand-l\"></div>\n              <div className=\"hand-r\"></div>\n              <div className=\"pumpkin\">\n                <div className=\"handle\"></div>\n                <div className=\"p1\"></div>\n                <div className=\"p2\"></div>\n                <div className=\"p3\"></div>\n                <div className=\"p4\"></div>\n                <div className=\"e-l\"></div>\n                <div className=\"e-r\"></div>\n                <div className=\"nose\"></div>\n                <div className=\"m\">\n                  <div className=\"t1\"></div>\n                  <div className=\"t2\"></div>\n                  <div className=\"t3\"></div>\n                  <div className=\"t4\"></div>\n                </div>\n              </div>\n            </div>\n          </div>\n        )\n      }\n    </div>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/statistics.bfe2e8a4.png\";","import React, { useCallback } from \"react\";\nimport { useDropzone } from \"react-dropzone\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport LoadingAnimation from \"./LoadingAnimation\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Icon from \"@material-ui/core/Icon\";\nimport dataIcon from \"./statistics.png\";\n\nconst useStyles = makeStyles((theme) => ({\n  zone: {\n    flex: 1,\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    padding: \"20px\",\n    fontSize: \"1.2rem\",\n    borderWidth: 2,\n    borderRadius: 2,\n    borderColor: \"#eeeeee\",\n    borderStyle: \"dashed\",\n    backgroundColor: \"#fafafa\",\n    color: \"#bdbdbd\",\n    outline: \"none\",\n    transition: \"border .24s ease-in-out\",\n    position: \"relative\",\n    minHeight: \"110px\",\n  },\n  rowDisplay: {\n    backgroundColor: \"#fafafa\",\n    borderColor: \"#eeeeee\",\n    color: \"#bdbdbd\",\n    display: \"flex\",\n    flexDirection: \"row !important\",\n  },\n  activeStyle: {\n    borderColor: \"#2196f3\",\n  },\n  acceptStyle: {\n    borderColor: \"#00e676\",\n  },\n  rejectStyle: {\n    borderColor: \"#ff1744\",\n    color: \"#ff1744\",\n  },\n  iconContainer: {\n    display: \"flex\",\n    padding: `0 ${theme.spacing(2)}px`,\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    cursor: \"pointer\",\n  },\n  icon: {\n    maxWidth: \"60px\",\n  },\n  moreButton: {\n    cursor: \"pointer\",\n  },\n  fullInfo: {\n    flex: 1,\n    textAlign: \"center\",\n  },\n  customTextContainer: {\n    display: \"flex\",\n    flex: 1,\n    flexDirection: \"row\",\n    alignItems: \"stretch\",\n    justifyContent: \"stretch\",\n  },\n  wrapper: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"stretch\",\n  },\n  customTextInput: {\n    flex: 1,\n  },\n}));\n\nexport default function DropZone({\n  onFileChange = () => {},\n  onAskForSampleData = () => {},\n  isLoading = false,\n}) {\n  const classes = useStyles();\n  const onDrop = useCallback(\n    (acceptedFiles) => {\n      // Do something with the files\n      const reader = new FileReader();\n\n      reader.onabort = () => console.log(\"file reading was aborted\");\n      reader.onerror = () => console.log(\"file reading failed\");\n      reader.onload = () => {\n        // Parse CSV file\n        const result = JSON.parse(reader.result);\n        if (Array.isArray(result) && result[0].id != null) {\n          onFileChange(\n            result.filter((item, pos) => {\n              return result.findIndex((el) => el.id === item.id) === pos;\n            })\n          );\n        }\n      };\n\n      // read file contents\n      acceptedFiles.forEach((file) => reader.readAsText(file));\n    },\n    [onFileChange]\n  );\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive,\n    isDragAccept,\n    isDragReject,\n  } = useDropzone({ accept: \"application/json\", onDrop });\n  const [value, setValue] = React.useState(\"\");\n\n  const handleChange = (event) => {\n    setValue(event.target.value);\n  };\n\n  const onSubmitText = () => {\n    onFileChange([\n      {\n        date: \"2021-01-16T21:18:58.000Z\",\n        content: value,\n        id: \"123456\",\n        author: \"Me\",\n        source: \"customText\",\n      },\n    ]);\n  };\n\n  const onLinkClick = () => {\n    onAskForSampleData();\n  };\n\n  const style = `${classes.zone} ${!isLoading ? classes.rowDisplay : \"\"} ${\n    isDragActive ? classes.activeStyle : \"\"\n  } ${isDragAccept ? classes.acceptStyle : \"\"} ${\n    isDragReject ? classes.rejectStyle : \"\"\n  }`;\n\n  return (\n    <div className={classes.wrapper}>\n      <div className={classes.rowDisplay}>\n        <div className={style} {...getRootProps()}>\n          <input {...getInputProps()} />\n          {!isLoading ? (\n            isDragActive ? (\n              isDragAccept ? (\n                <p className={classes.fullInfo}>Drop the files here ...</p>\n              ) : (\n                <p className={classes.fullInfo}>\n                  You cannot drop this type of file, we only accept{\" \"}\n                  <strong>.json</strong> files\n                </p>\n              )\n            ) : (\n              <p className={classes.fullInfo}>\n                Drag 'n' drop some data files here, or click to select files\n              </p>\n            )\n          ) : (\n            \"\"\n          )}\n          {isLoading && <LoadingAnimation />}\n        </div>\n        <div className={classes.iconContainer} onClick={onLinkClick}>\n          <img\n            className={classes.icon}\n            src={dataIcon}\n            aria-label={\"Load preprocessed data\"}\n          />\n          <Typography\n            className={classes.moreButton}\n            variant=\"h6\"\n            color=\"secondary\"\n            align=\"center\"\n          >\n            {\"Try on our data\"}\n          </Typography>\n        </div>\n      </div>\n      <div className={classes.customTextContainer}>\n        <TextField\n          id=\"outlined-multiline-flexible\"\n          label=\"Custom text\"\n          placeholder=\"Enter your custom text to get emotions from\"\n          className={classes.customTextInput}\n          multiline\n          rows={2}\n          value={value}\n          onChange={handleChange}\n          variant=\"outlined\"\n        />\n\n        <Button\n          variant=\"outlined\"\n          color=\"primary\"\n          disabled={value.length === 0}\n          onClick={onSubmitText}\n          endIcon={<Icon>send</Icon>}\n        >\n          Check custom text\n        </Button>\n      </div>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n// import SnackbarContent from \"@material-ui/core/SnackbarContent\";\n// import Icon from \"@material-ui/core/Icon\";\nimport { TwitterTweetEmbed } from \"react-twitter-embed\";\n\nimport \"./Tweet.css\";\n\nconst useStyles = makeStyles((theme) => ({\n  card: {\n    backgroundColor: \"rgba(29, 161, 242, 0.1)\",\n    width: \"400px\",\n    margin: 0,\n    padding: 0,\n    minHeight: \"100px\",\n    position: \"relative\",\n  },\n  tweet: {\n    width: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  error: {\n    backgroundColor: \"#f44336\",\n    color: \"#fff\",\n    fontWeight: 500,\n  },\n  errorMessage: {\n    textAlign: \"center\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  info: {\n    backgroundColor: \"#2196f336\",\n    color: \"#000\",\n    fontWeight: 500,\n  },\n  textPlaceholder: {\n    textAlign: \"center\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  progress: {\n    position: \"absolute\",\n    left: \"45%\",\n    top: \"25px\",\n  },\n}));\n\nexport default function Tweet({ tweetId, tweetContent = \"\", type = \"home\" }) {\n  const classes = useStyles();\n  const [loading, setLoading] = useState(true);\n  const onLoad = (data) => {\n    setLoading(false);\n  };\n\n  // if (error === true) {\n  //   return (\n  //     <SnackbarContent\n  //       className={classes.error}\n  //       message={\n  //         <React.Fragment>\n  //           <span className={classes.errorMessage}>\n  //             <Icon style={{ marginRight: \"10px\" }}>error_outline</Icon>\n  //             Ups... There is a problem with this tweet. Please check if you\n  //             have Adblock Disabled and if you have then just skip this tweet.\n  //           </span>\n  //         </React.Fragment>\n  //       }\n  //     />\n  //   );\n  // }\n\n  return (\n    tweetId && (\n      <React.Fragment>\n        <Card className={classes.card}>\n          <CardContent className={\"tweet-content\"}>\n            {tweetId && type !== \"customText\" && (\n              <TwitterTweetEmbed\n                onLoad={onLoad}\n                tweetId={tweetId}\n                placeholder={tweetContent}\n                options={{ maxWidth: 800, cards: \"hidden\" }}\n              />\n            )}\n            {tweetContent && type === \"customText\" && (\n              <div className={classes.textPlaceholder}>\n                {\"Custom Text:\"}\n                <br />\n                {tweetContent}\n              </div>\n            )}\n          </CardContent>\n          {loading && type !== \"customText\" && (\n            <CircularProgress color=\"secondary\" className={classes.progress} />\n          )}\n        </Card>\n      </React.Fragment>\n    )\n  );\n}\n","// Firebase Config\nexport const config = {\n  apiKey: \"AIzaSyAoAangmjRhPmpGj9TZ9EpAZJYqxpTCVH4\",\n  authDomain: \"tweet-annotator-7b789.firebaseapp.com\",\n  databaseURL: \"https://tweet-annotator-7b789.firebaseio.com\",\n  projectId: \"tweet-annotator-7b789\",\n  storageBucket: \"tweet-annotator-7b789.appspot.com\",\n  messagingSenderId: \"1057840760122\",\n  appId: \"1:1057840760122:web:c036eba1a841db18e7bc03\"\n};\n\n// This should have eng. keys but API returns polish\nexport const emotions = {\n  neutralny: \"Neutralny\",\n  oczekiwanie: \"Oczekiwanie\",\n  podziw: \"Podziw\",\n  radosc: \"Radość\",\n  smutek: \"Smutek\",\n  strach: \"Strach\",\n  wstret: \"Wstręt\",\n  zaskoczenie: \"Zaskoczenie\",\n  zlosc: \"Złość\"\n}\n\nexport const emotionColors = {\n  neutralny: \"#dfdfdf\",\n  oczekiwanie: \"#fda752\",\n  podziw: \"#52fe52\",\n  radosc: \"#ffff53\",\n  smutek: \"#5050fe\",\n  strach: \"#009400\",\n  wstret: \"#fe52fe\",\n  zaskoczenie: \"#58bbfe\",\n  zlosc: \"#fe0000\"\n}","export default __webpack_public_path__ + \"static/media/happiness.bda2aa8e.svg\";","export default __webpack_public_path__ + \"static/media/fear.2470cbbc.svg\";","export default __webpack_public_path__ + \"static/media/anger.43fe9051.svg\";","export default __webpack_public_path__ + \"static/media/neutral.96e77890.svg\";","export default __webpack_public_path__ + \"static/media/sad.5a017e37.svg\";","export default __webpack_public_path__ + \"static/media/disgusted.4c9262be.svg\";","export default __webpack_public_path__ + \"static/media/admiration.1c8ea55d.svg\";","export default __webpack_public_path__ + \"static/media/expectancy.7f622444.svg\";","export default __webpack_public_path__ + \"static/media/surprise-face.94191fd2.svg\";","import hapIcon from \"./happiness.svg\";\nimport fearIcon from \"./fear.svg\";\nimport angIcon from \"./anger.svg\";\nimport neutIcon from \"./neutral.svg\";\nimport sadIcon from \"./sad.svg\";\nimport disIcon from \"./disgusted.svg\";\nimport admIcon from \"./admiration.svg\";\nimport expIcon from \"./expectancy.svg\";\nimport surpIcon from \"./surprise-face.svg\";\n\nexport const icons = {\n  neutralny: neutIcon,\n  oczekiwanie: expIcon,\n  podziw: admIcon,\n  radosc: hapIcon,\n  smutek: sadIcon,\n  strach: fearIcon,\n  wstret: disIcon,\n  zaskoczenie: surpIcon,\n  zlosc: angIcon\n}\n\nexport const labels = [\n  {\n    id: \"radosc\",\n    label: \"Radość\",\n    icon: hapIcon,\n  },\n  {\n    id: \"smutek\",\n    label: \"Smutek\",\n    icon: sadIcon,\n  },\n  {\n    id: \"guilt\",\n    label: \"Podziw\",\n    icon: admIcon,\n  },\n  {\n    id: \"wstret\",\n    label: \"Wstręt\",\n    icon: disIcon,\n  },\n  {\n    id: \"zlosc\",\n    label: \"Złość\",\n    icon: angIcon,\n  },\n  {\n    id: \"strach\",\n    label: \"Strach\",\n    icon: fearIcon,\n  },\n  {\n    id: \"zaskoczenie\",\n    label: \"Zaskoczenie\",\n    icon: surpIcon,\n  },\n  {\n    id: \"oczekiwanie\",\n    label: \"Oczekiwanie\",\n    icon: expIcon,\n  },\n  {\n    id: \"neutralne\",\n    label: \"Neutralne\",\n    icon: neutIcon,\n  },\n];\nexport const annotationKey = \"annotated\";\nexport const skippedKey = \"skipped\";\nexport const userKey = \"user_id\"","import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport { Chart } from \"react-google-charts\";\nimport { emotions, emotionColors } from \"../../helpers/config\";\nimport { icons } from \"../../helpers/settings\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  icon: {\n    maxWidth: \"60px\",\n  },\n  container: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"center\"\n  },\n  iconContainer: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  moreButton: {\n    cursor: \"pointer\"\n  }\n}));\n\nexport default function Result({ data, id, onClickMore = () => {} }) {\n  const classes = useStyles();\n  if (data == null) {\n    return \"There was an error processing your request :(\";\n  }\n\n  const sortedArray = Object.entries(data).sort(function (a, b) {\n    return b[1] - a[1];\n  });\n\n  const onLinkClick = () => {\n    onClickMore(id)\n  }\n\n  const values = sortedArray\n    .slice(0, 3)\n    .map((el) => [\n      emotions[el[0]],\n      Number(Number(el[1] * 100).toFixed(1)),\n      emotionColors[el[0]],\n      null,\n    ]);\n\n  const emotionIcon = icons[sortedArray[0][0]];\n\n  return (\n    <div className={classes.container}>\n      <Chart\n        width={\"200px\"}\n        height={\"300px\"}\n        chartType=\"BarChart\"\n        loader={<div>Loading Chart</div>}\n        data={[\n          [\n            \"Emotion\",\n            \"Certainty [%]\",\n            { role: \"style\" },\n            {\n              sourceColumn: 0,\n              role: \"annotation\",\n              type: \"string\",\n              calc: \"stringify\",\n            },\n          ],\n          ...values,\n        ]}\n        options={{\n          titleTextStyle: { fontSize: 15 },\n          title: \"Top 3 emotions\",\n          // chartArea: { width: \"90%\" },\n          bar: { groupWidth: \"95%\" },\n          legend: { position: \"none\" },\n        }}\n        // For tests\n        rootProps={{ \"data-testid\": \"1\" }}\n      />\n      <div className={classes.iconContainer}>\n        <img\n          className={classes.icon}\n          src={emotionIcon}\n          aria-label={values[0][0]}\n        />\n        <Typography className={classes.moreButton} onClick={onLinkClick} variant=\"h6\" color=\"secondary\" align=\"center\">{\"More\"}</Typography>\n      </div>\n    </div>\n  );\n}","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport SnackbarContent from \"@material-ui/core/SnackbarContent\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Chart } from \"react-google-charts\";\nimport { emotions, emotionColors } from \"../../helpers/config\";\n\nconst sortedColumns = [\n  \"zlosc\",\n  \"wstret\",\n  \"strach\",\n  \"smutek\",\n  \"neutralny\",\n  \"zaskoczenie\",\n  \"oczekiwanie\",\n  \"podziw\",\n  \"radosc\",\n];\n\nconst modelNames = [\"Original\", \"Słowosieć\", \"Brand24\"];\n\nconst useStyles = makeStyles((theme) => ({\n  charts: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    marginTop: theme.spacing(1),\n  },\n  dialogContent: {\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  title: {\n    textAlign: \"center\",\n  },\n  sentiment: {\n    paddingTop: theme.spacing(2),\n    textAlign: \"center\",\n  },\n}));\n\nfunction getSentiment(topEmotion) {\n  if (sortedColumns.slice(0, 4).includes(topEmotion)) {\n    return <span style={{color: 'red'}}>{\"Negatywny\"}</span>;\n  }\n  if (sortedColumns.slice(6).includes(topEmotion)) {\n    return <span style={{color: 'lightGreen'}}>{\"Pozytywny\"}</span>;\n  }\n  return \"Neutralny\";\n}\n\nexport default function ResultDialog({ onClose, open, tweet }) {\n  const classes = useStyles();\n  if (tweet == null) {\n    return null;\n  }\n\n  const valuesModel1 = sortedColumns.map((emotion) => [\n    emotions[emotion],\n    Number(Number(tweet.model1[emotion] * 100).toFixed(1)),\n    emotionColors[emotion],\n    null,\n  ]);\n  const valuesModel2 = sortedColumns.map((emotion) => [\n    emotions[emotion],\n    Number(Number(tweet.model2[emotion] * 100).toFixed(1)),\n    emotionColors[emotion],\n    null,\n  ]);\n  const valuesModel3 = sortedColumns.map((emotion) => [\n    emotions[emotion],\n    Number(Number(tweet.model3[emotion] * 100).toFixed(1)),\n    emotionColors[emotion],\n    null,\n  ]);\n\n  const handleClose = () => {\n    onClose();\n  };\n\n  const scoreSum = [tweet.model1, tweet.model2, tweet.model3].reduce(\n    (acc, item) => {\n      for (const emotion in item) {\n        acc[emotion] = item[emotion] + (acc[emotion] || 0);\n      }\n      return acc;\n    }, {}\n  );\n\n  return (\n    <Dialog\n      onClose={handleClose}\n      aria-labelledby=\"result-dialog\"\n      open={open}\n      maxWidth={false}\n      fullWidth={true}\n    >\n      <DialogTitle id=\"result-dialog\" className={classes.title}>\n        Tweet results\n      </DialogTitle>\n      <DialogContent className={classes.dialogContent}>\n        <div className={classes.info}>\n          <Typography variant={\"subtitle2\"}>{\"Tweet's content\"}</Typography>\n          <SnackbarContent message={tweet.content} />\n          <Typography className={classes.sentiment} variant={\"h6\"}>\n            {\"Avg. Sentiment: \"}\n            <span>{getSentiment(Object.entries(scoreSum).sort(function (a, b) {\n              return b[1] - a[1];\n            })[0][0])}</span>\n          </Typography>\n        </div>\n        <div className={classes.charts}>\n          {[valuesModel1, valuesModel2, valuesModel3].map((values, idx) => (\n            <Chart\n              width={\"500px\"}\n              height={\"400px\"}\n              chartType=\"BarChart\"\n              loader={<div>Loading Chart</div>}\n              data={[\n                [\n                  \"Emotion\",\n                  \"Certainty [%]\",\n                  { role: \"style\" },\n                  {\n                    sourceColumn: 0,\n                    role: \"annotation\",\n                    type: \"string\",\n                    calc: \"stringify\",\n                  },\n                ],\n                ...values,\n              ]}\n              options={{\n                title: `Emotions - ${modelNames[idx]}`,\n                titleTextStyle: { fontSize: 18 },\n                // chartArea: { width: \"90%\" },\n                bar: { groupWidth: \"90%\" },\n                legend: { position: \"none\" },\n                hAxis: {\n                  title: \"Certainty [%]\",\n                  titleTextStyle: { fontSize: 16 },\n                },\n              }}\n              // For tests\n              rootProps={{ \"data-testid\": idx }}\n            />\n          ))}\n        </div>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose} color=\"primary\">\n          Close\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Tweet from \"../Tweet/Tweet\";\nimport Result from \"../Result/Result\";\nimport ResultDialog from \"../ResultDialog/ResultDialog\";\n\nconst useStyles = makeStyles((theme) => ({\n  buttons: {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n  },\n  buttonContainer: {\n    margin: \"auto\",\n  },\n  button: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(1),\n    fontSize: \"1rem\",\n  },\n  labelIcon: {\n    height: theme.spacing(6),\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    paddingLeft: theme.spacing(1),\n    paddingTop: theme.spacing(1),\n    textAlign: \"center\",\n  },\n  table: {\n    maxHeight: \"70vh\",\n  },\n  body: {\n    height: \"100%\",\n    overflowY: \"auto\",\n  },\n  tweetClass: {\n    padding: 0,\n    width: 400,\n  },\n  cellResult: {\n    borderRight: \"1px solid black\",\n    textAlign: \"center\",\n  },\n}));\n\nexport default function TweetTable({ tweets = [], isLoading = false }) {\n  const classes = useStyles();\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n  const [selectedTweet, setSelectedTweet] = useState(null);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  const handleClickMore = (id) => {\n    const newSelectedTweet = tweets.find((el) => el.id === id);\n    setSelectedTweet(newSelectedTweet);\n  };\n\n  const clearSelectedTweet = () => {\n    setSelectedTweet(null);\n  };\n\n  return (\n    <React.Fragment>\n      <TableContainer className={classes.table}>\n        <Table size=\"small\">\n          <TableHead>\n            <TableRow>\n              <TableCell>Tweet</TableCell>\n              <TableCell align=\"center\">Model - Original</TableCell>\n              <TableCell align=\"center\">Model - Słowosieć</TableCell>\n              <TableCell align=\"center\">Model - Brand24</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {tweets\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n              .map((row) => (\n                <TableRow key={row.id}>\n                  <TableCell\n                    padding=\"none\"\n                    size=\"small\"\n                    className={classes.tweetClass}\n                  >\n                    <Tweet\n                      tweetContent={row.content}\n                      tweetId={\"\" + row.id.split(\"/\")[3] + \"\"}\n                      type={row.source}\n                    />\n                  </TableCell>\n                  <TableCell\n                    align=\"right\"\n                    className={classes.cellResult}\n                    style={{\n                      color: row.status === \"On Time\" ? \"green\" : \"red\",\n                    }}\n                  >\n                    {isLoading && (\n                      <div>\n                        {\"Model's API is working\"}\n                        <br />\n                        <CircularProgress color=\"secondary\" />\n                      </div>\n                    )}\n                    {!isLoading && (\n                      <Result\n                        data={row.model1}\n                        id={row.id}\n                        onClickMore={handleClickMore}\n                      />\n                    )}\n                  </TableCell>\n                  <TableCell\n                    align=\"right\"\n                    className={classes.cellResult}\n                    style={{\n                      color: row.status === \"On Time\" ? \"green\" : \"red\",\n                    }}\n                  >\n                    {isLoading && (\n                      <div>\n                        {\"Model's API not available\"}\n                        <br />\n                        <CircularProgress color=\"secondary\" />\n                      </div>\n                    )}\n                    {!isLoading && (\n                      <Result\n                        data={row.model2}\n                        id={row.id}\n                        onClickMore={handleClickMore}\n                      />\n                    )}\n                  </TableCell>\n                  <TableCell\n                    align=\"right\"\n                    className={classes.cellResult}\n                    style={{\n                      color: row.status === \"On Time\" ? \"green\" : \"red\",\n                    }}\n                  >\n                    {isLoading && (\n                      <div>\n                        {\"Model's API not available\"}\n                        <br />\n                        <CircularProgress color=\"secondary\" />\n                      </div>\n                    )}\n                    {!isLoading && (\n                      <Result\n                        data={row.model3}\n                        id={row.id}\n                        onClickMore={handleClickMore}\n                      />\n                    )}\n                  </TableCell>\n                </TableRow>\n              ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      {tweets.length !== 0 && (\n        <TablePagination\n          rowsPerPageOptions={[10, 25, 100]}\n          component=\"div\"\n          count={tweets.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      )}\n      {tweets.length === 0 && (\n        <Typography\n          component=\"h2\"\n          variant=\"h6\"\n          color=\"textSecondary\"\n          gutterBottom\n          className={classes.title}\n        >\n          Please upload file with tweets\n        </Typography>\n      )}\n      <ResultDialog\n        onClose={clearSelectedTweet}\n        open={selectedTweet != null}\n        tweet={selectedTweet}\n      />\n    </React.Fragment>\n  );\n}\n","const initialState = {\n  tweets: [],\n  isRequestPending: false\n};\n\nconst SET_TWEETS = \"SET_TWEETS\";\nconst UPDATE_TWEETS = \"UPDATE_TWEETS\";\nconst REMOVE_TWEETS = \"REMOVE_TWEETS\";\nconst SET_FULL_TWEETS = \"SET_FULL_TWEETS\";\n\nconst actions = {\n  SET_TWEETS: SET_TWEETS,\n  UPDATE_TWEETS: UPDATE_TWEETS,\n  REMOVE_TWEETS: REMOVE_TWEETS,\n  SET_FULL_TWEETS: SET_FULL_TWEETS,\n};\n\nfunction updateTweetWithEmotions(tweet, tweetsWithEmotions) {\n  const matchingTweet = tweetsWithEmotions.find(el => el.id === tweet.id)\n  if(matchingTweet != null) {\n    return { ...matchingTweet, ...tweet }\n  }\n  return tweet\n}\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case SET_TWEETS:\n      return { ...state, isRequestPending: true, tweets: action.data };\n    case SET_FULL_TWEETS:\n      return { ...state, isRequestPending: false, tweets: action.data };\n    case UPDATE_TWEETS:\n      return { ...state, isRequestPending: false, tweets: state.tweets.map(tweet => updateTweetWithEmotions(tweet, action.data)) };\n    case REMOVE_TWEETS:\n      return { ...state, tweets: [] };\n    default:\n      throw new Error();\n  }\n}\n\nexport { reducer, initialState, actions };\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Slide from '@material-ui/core/Slide';\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport default function ServerErrorDialog({ onClose, open, onAccept }) {\n\n  const handleClose = () => {\n    onClose();\n  };\n\n  const handleAccept = () => {\n    onAccept()\n  }\n\n  return (\n    <Dialog\n      open={open}\n      TransitionComponent={Transition}\n      keepMounted\n      onClose={handleClose}\n      aria-labelledby=\"alert-dialog-slide-title\"\n      aria-describedby=\"alert-dialog-slide-description\"\n    >\n      <DialogTitle id=\"alert-dialog-slide-title\">{\"There was an error on our Server\"}</DialogTitle>\n      <DialogContent>\n        <DialogContentText id=\"alert-dialog-slide-description\">\n          There was a problem receiving data from the server, do you want to display our sample predictions instead?\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose} color=\"secondary\">\n          I don't want to see sample data\n        </Button>\n        <Button onClick={handleAccept} color=\"primary\">\n          Sure, show me the sample date\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import React, { useReducer, useEffect, useState } from \"react\";\nimport \"firebase/database\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport secondary from \"@material-ui/core/colors/indigo\";\nimport { CookiesProvider } from \"react-cookie\";\n\nimport Layout from \"../Layout/Layout\";\nimport DropZone from \"../DropZone/DropZone\";\nimport Table from \"../Table/Table\";\nimport { reducer, actions, initialState } from \"../../helpers/twitterReducer\";\nimport { getTweetsResults, getSampleResults } from \"../../services/apiService\";\nimport ServerErrorDialog from \"../ServerErrorDialog/ServerErrorDialog\";\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#852508\",\n    },\n    secondary: secondary,\n  },\n});\n\nfunction App() {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\n\n  const onTweetsChange = (newTweets = []) => {\n    dispatch({ type: actions.SET_TWEETS, data: newTweets });\n  };\n\n  const onAskForSampleData = async () => {\n    const results = await getSampleResults(state.tweets);\n    dispatch({ type: actions.SET_FULL_TWEETS, data: results });\n    setIsDialogOpen(false);\n  };\n\n  const closeDialog = () => {\n    setIsDialogOpen(false);\n  };\n\n  useEffect(() => {\n    if (state.isRequestPending) {\n      const request = getTweetsResults(state.tweets);\n      request\n        .then((response) => {\n          dispatch({\n            type: actions.UPDATE_TWEETS,\n            data: response.data,\n          });\n        })\n        .catch((err) => {\n          dispatch({\n            type: actions.REMOVE_TWEETS,\n          });\n          setIsDialogOpen(true);\n        });\n    }\n    // eslint-disable-next-line\n  }, [state.isRequestPending]);\n\n  return (\n    <CookiesProvider>\n      <ThemeProvider theme={theme}>\n        <Layout>\n          <DropZone\n            onFileChange={onTweetsChange}\n            isLoading={state.isRequestPending}\n            onAskForSampleData={onAskForSampleData}\n          />\n          <Table tweets={state.tweets} isLoading={state.isRequestPending} />\n          <ServerErrorDialog\n            onAccept={onAskForSampleData}\n            open={isDialogOpen}\n            onClose={closeDialog}\n          />\n        </Layout>\n      </ThemeProvider>\n    </CookiesProvider>\n  );\n}\n\nexport default App;\n","const { REACT_APP_API_URL } = process.env\n\nexport function getTweetsResults(tweets) {\n\n  return fetch(`${REACT_APP_API_URL}api/predictions/`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      tweets: tweets.map(el => ({ \"id\": el.id, \"text\": el.content }))\n    })\n  })\n    .then(data => data.json())\n}\n\nexport function getSampleResults(tweets) {\n  return fetch(`/project-polish-emotions-classifier/sample_preds.json`, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  })\n    .then(data => data.json())\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}